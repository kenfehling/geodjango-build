{"version":3,"file":"static/js/281.a6257345.chunk.js","mappings":"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","sources":["dashboard/config.tsx","features/data/dataSlice.ts","features/year/yearSlice.ts","features/plotType/plotTypeSlice.ts","features/controls/controlsSlice.ts","app/store.ts","hooks/useTouchOutside.ts","dashboard/CustomTooltipWithBounds.tsx","dashboard/utils/misc.ts","app/hooks.ts","dashboard/utils/colors.ts","dashboard/icons/Compare.svg","dashboard/utils/domain.ts","dashboard/selectors.ts","hooks/useSelect.tsx","dashboard/BubblePlot.tsx","dashboard/MapPlot.tsx","dashboard/LinePlot.tsx","dashboard/BarPlot.tsx","dashboard/utils/url.ts","dashboard/sharing.tsx","features/year/YearSlider.tsx","dashboard/icons.tsx","features/plotType/PlotTypeSelect.tsx","features/controls/Controls.tsx","features/data/DataManager.tsx","dashboard/Url.tsx","dashboard/Legend.tsx","dashboard/Nav.tsx","dashboard/icons/logo.svg","dashboard/Dashboard.tsx"],"sourcesContent":["import {zipObj, indexBy, prop, curry} from \"ramda\";\n\nexport const DATA_DIR = process.env.REACT_APP_ENV === 'production' ?\n    'https://storage.googleapis.com/statistipedia/data' : 'data';\n\nexport enum AxisLabelSource {\n    VAR,\n    COMPARE,\n    YEAR\n}\n\nexport type PlotType = {\n    name: string,\n    xAxisLabelSource?: AxisLabelSource,\n    hideAxisLabels?: boolean,\n    fields: {\n        x?: string,\n        y?: string,\n        z?: string\n    }\n};\n\nexport const PLOT_TYPES: PlotType[] = [{\n    name: 'bubble',\n    xAxisLabelSource: AxisLabelSource.VAR,\n    fields: {\n        x: 'X-Axis',\n        y: 'Y-Axis',\n        z: 'Size'\n    }\n}, {\n    name: 'line',  // aka. time series chart\n    xAxisLabelSource: AxisLabelSource.YEAR,\n    fields: {\n        // X-Axis is always time. Existing selection is kept, only disabled\n        y: 'Y-Axis'\n    }\n}, {\n    name: 'bar',\n    xAxisLabelSource: AxisLabelSource.COMPARE,\n    fields: {\n        // compare: 'Compare by',  // Secondary grouping nested under \"Compare by\"\n        y: 'Y-Axis'\n    }\n}, {\n    name: 'map',\n    hideAxisLabels: true,\n    fields: {\n        y: 'Color'\n    }\n}];\n\nexport const PLOT_TYPES_MAP: {[k: string]: PlotType} =\n    zipObj(PLOT_TYPES.map(p => p.name), PLOT_TYPES);\n\nexport type FeatureRanges = {\n    x: [number, number],\n    y: [number, number],\n    z: [number, number],\n    year: [number, number]\n};\n\nexport type ShareSize = {\n  name: string,\n  width: number,\n  height: number\n};\n\nexport const SHARE_SIZES: ShareSize[] = [{\n    name: 'Instagram Square',\n    width: 1080,\n    height: 1080\n}, {\n    name: 'Twitter',\n    width: 1024,\n    height: 512\n}, {\n    name: 'Pinterest',\n    width: 800,\n    height: 1200\n}, {\n    name: 'Tumblr',\n    width: 1280,\n    height: 1920\n}];\n\nexport const SHARE_SIZE_MAP: {[k: string]: ShareSize} =\n    zipObj(SHARE_SIZES.map(p => p.name), SHARE_SIZES);\n\nexport type Area = {\n    id: string\n    abbrev: string\n    name: string\n    geoid: string\n    link: string\n}\n\nexport interface IDashboardProps {\n    area?: string;\n    compare?: string[]\n}\n\nconst FIELD_TYPES = [\n    'geo',\n    'numeric',\n    'percent',\n    'dollars',\n    'minutes',\n    'hours',\n    'nominal',\n    'ordinal'\n];\n\nconst formatNum = (minDigits: number, maxDigits: number, num: number) : string => {\n    const options = {maximumFractionDigits: maxDigits, minimumFractionDigits: minDigits};\n    return Number(num).toLocaleString(undefined, options);\n};\n\nconst justAddCommas = curry(formatNum)(undefined, undefined);\nconst removeDecimals = curry(formatNum)(undefined, 0);\nconst oneDecimalPlace = curry(formatNum)(undefined, 1);\nconst twoDecimalPlaces = curry(formatNum)(undefined, 2);\nconst dollarsAndCents = curry(formatNum)(2, 2);\n\nexport const FIELD_TYPE_FORMAT_VALUES_MAP: {[name: string]: (value: any) => string} = {\n    'geo': _ => { throw new Error('Should not be asked to format value') },\n    'numeric': justAddCommas,\n    'percent': (value) => oneDecimalPlace(value) + '%',\n    'dollars': (value) => '$' + (value >= 100 ? removeDecimals(value) : dollarsAndCents(value)),\n    'minutes': (value) => removeDecimals(value) + ' minutes',\n    'hours': (value) => removeDecimals(value) + ' hours',\n    'years': (value) => removeDecimals(value) + ' years',\n};\n\nexport type FieldType = {\n    name: string\n    formatValue: (value: any) => string\n}\n\nexport type DataField = {\n    id: string,\n    name: string,\n    description: string,\n    group: string\n    type: string\n};\n\nexport type CompareByFieldValue = {\n    shortName: string\n    mediumName: string\n    fullName: string\n}\n\nexport type CompareByField = DataField & {\n    values: {[cbfvId: string]: CompareByFieldValue}\n}\n\nexport type CompareByFields = {\n    [id: string]: CompareByField\n}\n\nexport const FIELD_TYPES_MAP: {[name: string]: FieldType} =\n    indexBy(prop('name'), FIELD_TYPES);\n\nexport const NUMERIC_FIELDS = ['numeric', 'percent', 'dollars', 'minutes', 'hours', 'years'];\n\n// The processData script uses this config object,\n// so changes may not be reflected until reprocessing\nexport const FIELD_CFGS: {[id: string]: {type: string, group: string}} = {\n    'pct_total_pop': {\n        type: 'percent',\n        group: 'General'\n    },\n    // 'pop_density': {\n    //     type: 'numeric',\n    //     group: 'General'\n    // },\n    'gross_rent': {\n        type: 'dollars',\n        group: 'Housing'\n    },\n    'prop_value': {\n        type: 'dollars',\n        group: 'Housing'\n    },\n    'prop_tax': {\n        type: 'dollars',\n        group: 'Housing'\n    },\n    'income': {\n        type: 'dollars',\n        group: 'Employment'\n    },\n    'income_per_hr': {\n        type: 'dollars',\n        group: 'Employment'\n    },\n    'hh_income': {\n        type: 'dollars',\n        group: 'Employment'\n    },\n    'work_hrs_per_wk': {\n        type: 'hours',\n        group: 'Employment'\n    },\n    'commute_time': {\n        type: 'minutes',\n        group: 'Employment'\n    },\n    'avg_age': {\n        type: 'years',\n        group: 'Demographics'\n    },\n    'wh_pct': {\n        type: 'percent',\n        group: 'Demographics'\n    },\n    'bl_pct': {\n        type: 'percent',\n        group: 'Demographics'\n    },\n    'as_pct': {\n        type: 'percent',\n        group: 'Demographics'\n    },\n    'hi_pct': {\n        type: 'percent',\n        group: 'Demographics'\n    }\n};\n\nexport type CompareByFieldCfg = {\n    type: string,\n    group: string\n}\n\nexport const COMPARE_BY_FIELD_CFGS: {[id: string]: CompareByFieldCfg} = {\n    'sex': {\n        type: 'nominal',\n        group: 'Demographic'\n    },\n    'age': {\n        type: 'ordinal',\n        group: 'Demographic'\n    },\n    'race': {\n        type: 'nominal',\n        group: 'Demographic'\n    },\n    'marital': {\n        type: 'nominal',\n        group: 'Demographic'\n    },\n    'education': {\n        type: 'nominal',\n        group: 'Demographic'\n    }\n}\n\nexport type DataValue = any & {\n    geoid: string\n    year: number\n}\n\nexport type DerivedDataValueSet = any & {\n    geoid: string\n    name: string\n    year: number\n    x: number\n    y: number\n    z: number\n}\n\nexport type ApiData = {\n    areas: {[id: string]: Area},\n    levels: {[id: string]: DataField},\n    fields: {[id: string]: DataField},\n    compareByFields: CompareByFields,\n    years: number[],\n    divisions: { byLevel: {[levelId: string]: any[]} }\n    values: DerivedDataValueSet[]\n    topologies: { byAreaAndLevel: {[areaId: string]: {[levelId: string]: any}}}\n}\n\nexport type Data = {\n    areas: { byId: {[id: string]: Area}, allIds: string[]}\n    levels: { byId: {[id: string]: DataField}, allIds: string[]}\n    fields: { byId: {[id: string]: DataField}, allIds: string[]}\n    compareByFields: { byId: CompareByFields, allIds: string[]}\n    years: number[],\n    divisions: { byLevel: {[levelId: string]: any[]} }\n    values: DerivedDataValueSet[]\n    topologies: { byAreaAndLevel: {[areaId: string]: {[levelId: string]: any}}}\n}\n\nexport interface ControlValues {\n    area: string,\n    level: string,\n    compare: string[],\n    x: string,\n    y: string,\n    z: string\n}\n\nexport type UrlParams = {\n    level?: string\n    area?: string\n    compare?: string[]\n    plot?: string\n    x?: string\n    y?: string\n    z?: string\n}\n\nexport const getOgImageUrl = (params: IDashboardProps) : string => {\n    return '';\n};\n\ntype PlotPresetCfg = {\n    title: string\n    params: UrlParams\n}\n\nexport type PlotPreset = {\n    title: string\n    area: Area\n    url: string\n}\n\nexport const PLOT_PRESETS: PlotPresetCfg[] = [{\n    title: 'Hourly income by sex / marital status',\n    params: {\n        area: 'us',\n        level: 'state',\n        compare: ['sex', 'marital'],\n        plot: 'bubble',\n        x: 'work_hrs_per_wk',\n        y: 'income_per_hr'\n    }\n}, {\n    title: 'Hourly income by education',\n    params: {\n        area: 'us',\n        level: 'state',\n        compare: ['education'],\n        plot: 'bar',\n        x: 'work_hrs_per_wk',\n        y: 'income_per_hr'\n    }\n}, {\n    title: 'NY county populations',\n    params: {\n        area: 'ny',\n        level: 'county',\n        plot: 'map',\n        y: 'pct_total_pop'\n    }\n}];\n\nexport enum LegendCorner {\n    NW = 'nw',\n    NE = 'ne',\n    SW = 'sw',\n    SE = 'se'\n}\n\nexport type LegendPosition = {\n    corner: LegendCorner\n    closestDataPoint: number\n}\n\nexport const BOTTOM_DRAWER_HEIGHT = 320;\nexport const BOTTOM_DRAWER_CORNER = 4;\nexport const PCT_V_SPACE_LEFT_FOR_LEGEND = 1/3;\nexport const ANIMATION_DURATION = 1000;\n","import {createSelector, createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from '../../app/store';\nimport {\n    ApiData, Area, COMPARE_BY_FIELD_CFGS, CompareByField, CompareByFields,\n    Data,\n    DataField, DerivedDataValueSet,\n    FIELD_CFGS,\n    NUMERIC_FIELDS\n} from \"../../dashboard/config\";\nimport {map, zipObj} from 'ramda';\nimport masterData from '../../dashboard/data/master.json'\n\nexport interface DataState {\n    value: Data,\n    status: 'idle' | 'loading' | 'failed';\n}\n\nconst augmentField = (cfg: {[id: string]: any}, f: DataField) : DataField =>\n    ({...f, ...cfg[f.id]});\n\n/**\n * Takes (partial) incoming API data and formats it for Redux store\n */\nconst processData = (data: ApiData) : Data => {\n    // @ts-ignore\n    const newData: Data = {...data};\n    if (!!data.areas) {\n        newData['areas'] = {\n            byId: map((a: Area) => ({\n                ...a,\n                link: `../places/us${a.id === 'us' ? '' : '/' + a.id}`\n            }), data.areas),\n            allIds: Object.keys(data.areas)\n        }\n    }\n    if (!!data.levels) {\n        newData['levels'] = {\n            byId: data.levels,\n            allIds: Object.keys(data.levels)\n        }\n    }\n    if (!!data.fields) {\n        newData['fields'] = {\n            byId: map(f => augmentField(FIELD_CFGS, f), data.fields),\n            allIds: Object.keys(FIELD_CFGS)\n        }\n    }\n    if (!!data.compareByFields) {\n        newData['compareByFields'] = {\n            byId: map(f => augmentField(COMPARE_BY_FIELD_CFGS, f), data.compareByFields),\n            allIds: Object.keys(data.compareByFields)\n        }\n    }\n    return newData;\n};\n\nconst initialState: DataState = {\n    value: {\n        // @ts-ignore\n        ...processData(masterData),\n        values: [],\n        topologies: {byAreaAndLevel: {}}\n    },\n    status: 'idle',\n};\n\nexport const dataSlice = createSlice({\n    name: 'data',\n    initialState,\n    reducers: {\n        setData: (state, action: PayloadAction<any>) => {\n            const newData = processData(action.payload);\n            state.value.values = [];\n            state.value = {...state.value, ...newData};\n        },\n        clearDataValues: (state) => {\n            state.value.values = [];\n        }\n    }\n});\n\nexport const { setData, clearDataValues } = dataSlice.actions;\nexport const selectData = (state: RootState) => state.data.value;\nexport const selectAreas = (state: RootState) => state.data.value?.areas;\nexport const selectFields = (state: RootState) => state.data.value?.fields;\nexport const selectCompareByFields = (state: RootState) :\n    {byId: CompareByFields, allIds: string[]} => state.data.value?.compareByFields;\nexport const selectLevels = (state: RootState) => state.data.value?.levels;\nexport const selectTopologiesByAreaAndLevel = (state: RootState) =>\n    state.data.value?.topologies.byAreaAndLevel;\nexport const selectYears = (state: RootState) => state.data.value?.years;\nexport const selectDivisionsByLevel = (state: RootState) =>\n    state.data.value?.divisions.byLevel;\nexport const selectValues = (state: RootState) : DerivedDataValueSet[] =>\n    state.data.value?.values;\n\nexport const selectAllCompareByFieldDetails = createSelector(\n    selectCompareByFields,\n    (compareByFields) : CompareByField[] => {\n        return compareByFields ? compareByFields.allIds\n            .map(id => compareByFields.byId[id])\n            : null\n    }\n);\n\nexport const selectNumericFields = createSelector(\n    selectFields,\n    (fields) : DataField[] => {\n        return fields ? fields.allIds\n            .map(id => fields.byId[id])\n            .filter(f => NUMERIC_FIELDS.includes(f.type)\n            ) : null\n    }\n);\n\nexport const selectGeoDivisionFields = createSelector(\n    selectLevels,\n    (levels) : DataField[] => {\n        return Object.values(levels.byId).map(level => ({\n            ...level,\n            group: 'Geographic',\n            type: 'geo'\n        }))\n    }\n);\n\nexport default dataSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {last} from 'ramda';\nimport { RootState } from '../../app/store';\nimport {dataSlice} from \"../data/dataSlice\";\nimport {Data} from \"../../dashboard/config\";\n\nexport interface YearState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: YearState = {\n  value: 2020,\n  status: 'idle',\n};\n\nexport const yearSlice = createSlice({\n  name: 'year',\n  initialState,\n  reducers: {\n    setYear: (state, action: PayloadAction<number>) => {\n      const value = action.payload;\n      if (value != null && value !== state.value) {\n          state.value = value;\n      }\n    }\n  },\n  extraReducers: {\n    // @ts-ignore\n    [dataSlice.actions.setData]: (state, action: PayloadAction<Data>) => {\n      const data = action.payload;\n      // TODO: I'd like to use the state but it's not set in the store yet.\n      // TODO: Also selectors cannot be run from reducers?\n      // TODO: That'd be the preferred way wouldn't it?\n      if (data.years) {\n        state.value = last(data.years);\n      }\n    }\n  }\n});\n\nexport const { setYear } = yearSlice.actions;\nexport const selectYear = (state: RootState) => state.year.value;\nexport default yearSlice.reducer;\n","import {PLOT_TYPES_MAP} from \"../../dashboard/config\";\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport interface PlotTypeState {\n    value: string;\n    status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: PlotTypeState = {\n    value: 'map',\n    status: 'idle',\n};\n\nexport const plotTypeSlice = createSlice({\n    name: 'plotType',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        // Use the PayloadAction type to declare the contents of `action.payload`\n        setPlotType: (state, action: PayloadAction<string>) => {\n            const value = action.payload;\n            if (value != null && value !== '' /* && state.value !== value */)\n                state.value = value;\n        },\n    }\n});\n\nexport const { setPlotType } = plotTypeSlice.actions;\nexport const selectPlotType = (state: RootState) => PLOT_TYPES_MAP[state.plotType.value];\nexport default plotTypeSlice.reducer;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport masterData from '../../dashboard/data/master.json';\nimport {ControlValues} from \"../../dashboard/config\";\nimport {equals} from 'ramda';\n\nexport interface ControlsState {\n    value: ControlValues,\n    loaded: boolean\n}\n\nconst defaultFields = Object.keys(masterData.fields);\n\nconst initialState: ControlsState = {\n    value: {\n        area: \"us\",\n        compare: [],\n        level: \"state\",\n        x: defaultFields[0],\n        y: defaultFields[1],\n        z: \"pct_total_pop\"\n    },\n    loaded: false\n};\n\nexport const controlsSlice = createSlice({\n    name: 'controls',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        setControls: (state, action: PayloadAction<Object>) => {\n            const newValue = {...state.value, ...action.payload};\n            if (!equals(state.value, newValue)) {\n                state.value = newValue;\n            }\n        },\n        setLoaded: (state) => {\n            state.loaded = true;\n        }\n    }\n});\n\nexport const { setControls, setLoaded } = controlsSlice.actions;\n\nexport const selectActualControlValues = (state: RootState) : ControlValues =>\n    state.controls.value;\n\nexport const selectControlsLoaded = (state: RootState) : boolean =>\n    state.controls.loaded;\n\nexport default controlsSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport yearReducer from '../features/year/yearSlice';\nimport plotTypeReducer from '../features/plotType/plotTypeSlice';\nimport dataReducer from '../features/data/dataSlice';\nimport controlsReducer from '../features/controls/controlsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    data: dataReducer,\n    year: yearReducer,\n    plotType: plotTypeReducer,\n    controls: controlsReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { useEffect } from \"react\"\n\nconst useTouchOutside = (elementRef, onClick) => {\n    useEffect(() => {\n        const clickListener = event => {\n            if (!elementRef.current || elementRef.current.contains(event.target)) {\n                return\n            }\n            onClick(event)\n        }\n        // const moveListener = event => {\n        //     if (!elementRef.current || elementRef.current.contains(event.target)) {\n        //         return\n        //     }\n        //     onMove(event);\n        // }\n        document.addEventListener(\"touchstart\", clickListener)\n        // document.addEventListener(\"mousemove\", moveListener)\n        return () => {\n            document.removeEventListener(\"touchstart\", clickListener)\n            // document.removeEventListener(\"mousemove\", moveListener)\n        }\n    }, [elementRef, onClick])\n}\n\nexport default useTouchOutside\n","import React from 'react';\nimport { Tooltip } from '@visx/tooltip';\nimport { withBoundingRects } from '@visx/bounds';\n\nfunction CustomTooltipWithBounds({\n                                     left: initialLeft,\n                                     top: initialTop,\n                                     offsetLeft = 20,\n                                     offsetTop = 20,\n                                     rect,\n                                     parentRect,\n                                     getRects,\n                                     children,\n                                     style,\n                                     ...otherProps\n                                 }) {\n\n    let left = initialLeft;\n    let top = initialTop;\n\n    if (parentRect) {\n        if (parentRect.width > 0) {\n            if (left + offsetLeft + rect.width > parentRect.width) {\n                left = parentRect.width - rect.width - offsetLeft;\n            }\n            if (left < 0) {\n                left = 0;\n            }\n        }\n\n        if (parentRect.height > 0) {\n            if (top + offsetTop + rect.height > parentRect.height) {\n                top = parentRect.height - rect.height - offsetTop;\n            }\n            if (top < 0) {\n                top = 0;\n            }\n        }\n    }\n\n    return (\n        <Tooltip\n            style={{ top: 0, transform: `translate(${left}px, ${top}px)`, ...style }}\n            {...otherProps}\n        >\n            {children}\n        </Tooltip>\n    );\n}\nexport default withBoundingRects(CustomTooltipWithBounds);\n","import {intersection, reduce, tail} from 'ramda';\n\n// bind ::  [a] -> (a -> [b]) -> [b]\nconst bind = xs => f => xs.flatMap(f);\n\n// foldr :: (a -> b -> b) -> b -> [a] -> b\nconst foldr = f => a => xs =>\n    xs.reduceRight((a, x) => f(x)(a), a);\n\nexport const cartProdN = foldr(\n    xs => as =>\n        bind(as)(\n            x => bind(xs)(\n                a => [\n                    [a].concat(x)\n                ]\n            )\n        )\n)([\n    []\n]);\n\n// TODO: Are these (above and below) the same?\n\nexport function cartProduct<T>(...sets: T[][]) : T[][] {\n    return sets.reduce((acc: T[][], set: T[]) =>\n            acc.flatMap((x) => set.map(y => [...x, y])),\n        [[]]);\n}\n\nexport const intersectAll = (xs) => reduce(intersection, xs[0], tail(xs));\n\nexport const allValuesNotNull = (obj: Object) : boolean =>\n    Object.values(obj).every(f => f != null);\n\nexport const flattenArrayOfObjects = (arr: Object[]) : Object => {\n    const flatObject = {};\n    for(let i = 0; i < arr.length; i++) {\n        for(const property in arr[i]){\n            flatObject[`${property}`] = arr[i][property];\n        }\n    }\n    return flatObject;\n};\n\nexport function firstAndLast<T>(values: T[]) : T[] {\n    return [values[0], values[values.length - 1]];\n}\n\nexport function nestedFirstAndLast<T>(values: T[][]) : T[][] {\n    return values.map(firstAndLast);\n}\n\nexport function capitalize(s: string) : string {\n    return s[0].toUpperCase() + s.slice(1);\n}\n\nexport const sum = (array) => array.reduce((a, b) => a + b);\nexport const average = (array) => sum(array) / array.length;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n    CompareByField,\n    CompareByFields,\n    CompareByFieldValue\n} from \"../config\";\nimport {firstAndLast, nestedFirstAndLast} from \"./misc\";\nimport {curry, compose, zipObj} from 'ramda';\n\ntype ColorHsv = {\n    h: number,\n    s: number,\n    v: number\n}\n\nconst DEFAULT_COLOR: ColorHsv = {h: 214, s: 0.8, v: 1};\n\nconst HUE_PRESETS = [\n    210,\n    350,\n    32,\n    285,\n    160\n];\n\nconst SAT_RANGE = [0.3, 1];\n\n// Generates a single color for a compare feature value\ntype ColorFn = (inputColor: ColorHsv,\n                value: CompareByFieldValue,\n                nFieldValues: number,\n                valueIndex: number,\n                isPrioritized: boolean) => ColorHsv\n\nexport const autoHueScale = (c: ColorHsv, n: number, i: number) : ColorHsv  => {\n    return {...c, h: HUE_PRESETS[i]};\n};\n\nexport const autoSatScale = (c: ColorHsv, n: number, i: number) : ColorHsv  => {\n    const s = ((SAT_RANGE[1] - SAT_RANGE[0]) / n) * i + SAT_RANGE[0];\n    return {...c, s, v: s >= 1/2 ? 1 - s/3 : 1 };\n};\n\nexport const autoScaleColorNominal = (\n    c, value, nFieldValues, index, isPrioritized\n) : ColorHsv => {\n    if (isPrioritized) {\n        return autoHueScale(c, nFieldValues, index);\n    } else {\n        // Assume ascending order\n        const sStart = SAT_RANGE[0];\n        const sEnd = 1;\n        const vStart = 1;\n        const vEnd = 0.5;\n        const sStep = (sEnd - sStart) / nFieldValues;\n        const vStep = (vEnd - vStart) / nFieldValues;\n        return {...c, s: sStart + sStep * index, v: vStart + vStep * index};\n    }\n};\n\nexport const autoScaleColorOrdinal = (\n    c, value, nFieldValues, index, isPrioritized\n) : ColorHsv => {\n    return autoSatScale(c, nFieldValues, index);\n};\n\nconst COMPARE_BY_COLOR_FNS: {[id: string]: ColorFn} = {  // Listed in priority order\n    'sex':  (c, value) =>\n        ({...c, h: value.shortName === 'M' ? 210 : 330}),\n    'race': autoScaleColorNominal,\n    'marital': autoScaleColorNominal,\n    'education': autoScaleColorNominal,\n    'age': autoScaleColorOrdinal,\n};\n\nconst COMPARE_BY_COLOR_PRIORITIES : {[key: string]: number} = {\n    'sex': 1,\n    'race': 2,\n    'marital': 2,\n    'education': 2,\n    'age': 3\n};\n\nfunction hsvToRgb(h, s, v) {\n    let r, g, b;\n    const h1 = h / 360;  // Convert hue to a value between 0 and 1\n    const i = Math.floor(h1 * 6);\n    const f = h1 * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0: r = v; g = t; b = p; break;\n        case 1: r = q; g = v; b = p; break;\n        case 2: r = p; g = v; b = t; break;\n        case 3: r = p; g = q; b = v; break;\n        case 4: r = t; g = p; b = v; break;\n        case 5: r = v; g = p; b = q; break;\n    }\n    return [ r * 255, g * 255, b * 255 ].map(x => Math.round(x));\n}\n\nfunction componentToHex(c) {\n    // @ts-ignore\n    const hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport const hsvToHex = (h, s, v) : string => {\n    const [r, g, b] = hsvToRgb(h, s, v);\n    return rgbToHex(r, g, b);\n};\n\ntype FieldValueKey = {\n    field: string\n    value: string\n}\n\ntype ColorKeySet = {\n    k1?: FieldValueKey\n    k2?: FieldValueKey\n}\n\ntype KeysAndHsvColor = {\n    keys: ColorKeySet\n    color: ColorHsv\n}\n\ntype ColorPaletteHashMap = { [key: string]: string }\n\nexport type ColorPalette = {\n    hashMap: ColorPaletteHashMap\n    labels: {\n        rows: string[],\n        cols: string[]\n    },\n    fullNames: {\n        rows: string[],\n        cols: string[]\n    }\n    colors: {\n        byRowAndCol: string[][]\n    }\n}\n\nconst sortKeys = (cbfs: CompareByField[], keys: ColorKeySet) : ColorKeySet => {\n    if (keys.k2) {  // If it has 2 keys (0 or 1 and the order doesn't matter)\n        const fieldToIndexMap = zipObj(\n            cbfs.map((cbf) => cbf.id),\n            cbfs.map((_, i) => i)\n        );\n        if (fieldToIndexMap[keys.k1.field] > fieldToIndexMap[keys.k2.field]) {\n            return { k1: keys.k2, k2: keys.k1 };  // Switch order\n        }\n    }\n    return keys;  // Just return original order\n};\n\nconst createKey = (cbfs: CompareByField[], keys: ColorKeySet) : string => {\n    if (!keys.k1) {\n        return ''\n    } else {\n        const sk = sortKeys(cbfs, keys);\n        return sk.k1.field + '=' + sk.k1.value +\n        (sk.k2 ? (';' + sk.k2.field + '=' + sk.k2.value) : '')\n    }\n}\n\nconst addColorToPalette = (p: ColorPaletteHashMap,\n                           cbfs: CompareByField[],\n                           keys: ColorKeySet, color: string) => {\n    p[createKey(cbfs, keys)] = color;\n}\n\nconst createKeySet = (compareByFields: CompareByField[],\n                      value: Object) : ColorKeySet => {\n    const cbfs = Object.values(compareByFields);\n    if (cbfs.length === 0) {\n        return {};\n    }\n    const k = { k1: { field: cbfs[0].id, value: value[cbfs[0].id] }};\n    switch (cbfs.length) {\n        case 1: return k;\n        case 2: return { ...k, k2: { field: cbfs[1].id, value: value[cbfs[1].id] }};\n        default: throw new Error('Invalid compare by field length: ' + cbfs.length);\n    }\n};\n\nconst _getColorFromPalette = (p: ColorPaletteHashMap,\n                              cbfs: CompareByField[],\n                              ks: ColorKeySet) : string => {\n    return p[createKey(cbfs, ks)];\n}\n\nexport const getColorFromPalette = (p: ColorPalette,\n                                    cbfs: CompareByField[],\n                                    value: Object) : string =>\n    _getColorFromPalette(p.hashMap, cbfs, createKeySet(cbfs, value))\n\nconst getShortLabels = (compare: CompareByField) : string[] =>\n    Object.values(compare.values).map(v => v.shortName);\n\nconst getFullLabels = (compare: CompareByField) : string[] =>\n    Object.values(compare.values).map(v => v.fullName);\n\nfunction iterateOverCompareGrid<T>(fn: (ks: ColorKeySet) => T,\n                                   cbf1: CompareByField,\n                                   cbf2: CompareByField) : T[][] {\n    return Object.values(cbf1.values).map((v1) =>\n        Object.values(cbf2.values).map((v2) => fn({\n            k1: {field: cbf1.id, value: v1.shortName},\n            k2: {field: cbf2.id, value: v2.shortName}\n        })));\n}\n\nconst switchToAlwaysMakeLegendHorizontal = (cbfs: CompareByField[]) : CompareByField[] =>\n    Object.values(cbfs[1].values).length >= Object.values(cbfs[0].values).length\n        ? cbfs : [cbfs[1], cbfs[0]];\n\nconst setupColorPalette = (cbfs: CompareByField[],\n                           kahcs: KeysAndHsvColor[]) : ColorPalette => {\n    const p = { hashMap: {} };\n    kahcs.forEach((kahc) => {\n        addColorToPalette(\n            p.hashMap,\n            cbfs,\n            kahc.keys,\n            hsvToHex(kahc.color.h, kahc.color.s, kahc.color.v));\n    });\n    const keySets = kahcs.map(kahc => kahc.keys);\n    const getColor = curry(_getColorFromPalette)(p.hashMap, cbfs);\n    const getColorGrid = curry(iterateOverCompareGrid)(getColor);\n    switch (cbfs.length) {\n        case 0:\n            return {\n                ...p,\n                labels: { rows: [], cols: [] },\n                fullNames: { rows: [], cols: [] },\n                colors: { byRowAndCol: [] }\n            }\n        case 1:\n            return cbfs[0].type === 'nominal' ? {\n                ...p,\n                labels: {\n                    rows: getFullLabels(cbfs[0]),\n                    cols: []\n                },\n                fullNames: {\n                    rows: getFullLabels(cbfs[0]),\n                    cols: []\n                },\n                colors: {\n                    byRowAndCol: keySets.map(compose(x => [x], getColor))\n                }\n            } : {\n                ...p,\n                labels: {\n                    rows: [],\n                    cols: firstAndLast(getShortLabels(cbfs[0])),\n                },\n                fullNames: {\n                    rows: [],\n                    cols: firstAndLast(getFullLabels(cbfs[0])),\n                },\n                colors: {\n                    byRowAndCol: [firstAndLast(keySets.map(getColor))]\n                }\n            };\n        case 2:\n            if (cbfs[0].type === 'nominal') {  // nominal x nominal\n                const scbfs = switchToAlwaysMakeLegendHorizontal(cbfs);\n                return cbfs[1].type === 'nominal' ? {\n                    ...p,\n                    labels: {\n                        rows: getShortLabels(scbfs[0]),\n                        cols: getShortLabels(scbfs[1])\n                    },\n                    fullNames: {\n                        rows: getFullLabels(scbfs[0]),\n                        cols: getFullLabels(scbfs[1])\n                    },\n                    colors: {\n                        byRowAndCol: getColorGrid(scbfs[0], scbfs[1])\n                    }\n                } : {  // nominal x ordinal\n                    ...p,\n                    labels: {\n                        rows: getFullLabels(cbfs[0]),\n                        cols: firstAndLast(getShortLabels(cbfs[1]))\n                    },\n                    fullNames: {\n                        rows: getFullLabels(scbfs[0]),\n                        cols: firstAndLast(getFullLabels(cbfs[1]))\n                    },\n                    colors: {\n                        byRowAndCol: nestedFirstAndLast(getColorGrid(cbfs[0], cbfs[1]))\n                    }\n                }\n            } else {\n                return cbfs[1].type === 'ordinal' ? {  // ordinal x ordinal\n                    ...p,\n                    labels: {\n                        rows: firstAndLast(getShortLabels(cbfs[0])),\n                        cols: firstAndLast(getShortLabels(cbfs[1])),\n                    },\n                    fullNames: {\n                        rows: firstAndLast(getFullLabels(cbfs[0])),\n                        cols: firstAndLast(getFullLabels(cbfs[1])),\n                    },\n                    colors: {\n                        byRowAndCol: firstAndLast(nestedFirstAndLast(getColorGrid(cbfs[0], cbfs[1])))\n                    }\n                } : {  // ordinal x nominal\n                    ...p,\n                    labels: {\n                        rows: getFullLabels(cbfs[1]),\n                        cols: firstAndLast(getShortLabels(cbfs[0]))\n                    },\n                    fullNames: {\n                        rows: getFullLabels(cbfs[1]),\n                        cols: firstAndLast(getFullLabels(cbfs[0]))\n                    },\n                    colors: {\n                        byRowAndCol: nestedFirstAndLast(getColorGrid(cbfs[1], cbfs[0]))\n                    }\n                };\n            }\n        default:\n            throw new Error(`Has ${cbfs.length} compares. Must be 0-2.`)\n    }\n}\n\nexport const createColorPalette = (compareByFields: CompareByFields) : ColorPalette => {\n    const cbfs = Object.values(compareByFields);\n    const priorities = cbfs.map(cbf => COMPARE_BY_COLOR_PRIORITIES[cbf.id]);\n    const lowPriority = Math.max(...priorities);\n    const highPriority = Math.min(...priorities);\n    const isPrioritized = (cbf: CompareByField, i: number) : boolean => {\n        if (lowPriority === highPriority) {\n            return i === 0;\n        } else {\n            return COMPARE_BY_COLOR_PRIORITIES[cbf.id] === highPriority;\n        }\n    }\n    const kahcs = cbfs.reduce((\n        accum: KeysAndHsvColor[],\n        cbf: CompareByField,\n        cbfi: number\n    ) : KeysAndHsvColor[] => {\n        const isAccumDefault = !accum[0].keys.k1;\n        const fn = COMPARE_BY_COLOR_FNS[cbf.id];\n        if (!fn) {\n            throw new Error(\"Color function not found for \" + cbf.id);\n        }\n        const newColors: KeysAndHsvColor[] = accum.flatMap((\n            existing: KeysAndHsvColor\n        ) => {\n            const fieldValues = Object.values(cbf.values);\n            const nFieldValues = fieldValues.length;\n            return fieldValues.map((cbfv: CompareByFieldValue, vi) => ({\n                keys: isAccumDefault ? {\n                    k1: {\n                        field: cbf.id,\n                        value: cbfv.shortName,\n                    }\n                } : {\n                    ...existing.keys,\n                    k2: {\n                        field: cbf.id,\n                        value: cbfv.shortName\n                    }\n                },\n                color: fn(\n                    existing.color,\n                    cbfv,\n                    nFieldValues,\n                    vi,\n                    isPrioritized(cbf, cbfi))\n            }));\n        });\n        return isAccumDefault ? newColors : [...accum, ...newColors];\n    }, [{color: DEFAULT_COLOR, keys: {}}]);\n    return setupColorPalette(cbfs, kahcs);\n};\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCompare(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"256pt\",\n    height: \"256pt\",\n    viewBox: \"0 0 256 256\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#757575\",\n    fillRule: \"evenodd\",\n    stroke: \"#757575\",\n    strokeLinecap: \"square\",\n    strokeLinejoin: \"bevel\",\n    d: \"M69 114.85h48V219.5H69zM135.62 20.487h48v199.18h-48z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#757575\",\n    fillRule: \"evenodd\",\n    stroke: \"#757575\",\n    strokeWidth: 10,\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 2,\n    d: \"M20 236.021h216\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCompare);\nexport default __webpack_public_path__ + \"static/media/Compare.7e039b5f1002d9c6ed17a8eb1f0d6ecd.svg\";\nexport { ForwardRef as ReactComponent };","import {\n    DerivedDataValueSet,\n    FeatureRanges,\n    LegendCorner,\n    LegendPosition,\n    PlotType\n} from \"../config\";\nimport {max, min} from 'd3-array';\nimport {ColorPalette, getColorFromPalette} from \"./colors\";\nimport {average} from \"./misc\";\n\nexport const processItemValues = (\n    vs: DerivedDataValueSet[],\n    controlFields,\n    divisions,\n    colorPalette: ColorPalette\n) => {\n    const createName = (v: DerivedDataValueSet) => {\n        const cs = controlFields.compare;\n        const div = divisions[v.geoid];\n        const area = controlFields.area;\n        const divName = cs.length > 0 ? div?.abbrev || div?.name : div?.name;\n        const areaName = cs.length > 0 ? area.abbrev : area.name;\n        const place = divName || areaName;\n        const getC = c => {\n            if (!c.values[v[c.id]]) {\n                // throw new Error(`Compare value '${c.id}' not found in ${place}`);\n                return [];\n            }\n            return c.values[v[c.id]].mediumName;\n        }\n        const parts = [\n            place,\n            cs.map(getC).join(', ')\n        ];\n        return parts.filter(x => x.length > 0).join(': ')\n    };\n    return vs.map(v => ({\n        ...v,\n        name: createName(v),\n        x: v[controlFields.x.id],\n        y: v[controlFields.y.id],\n        z: v[controlFields.z.id],\n        color: getColorFromPalette(colorPalette, controlFields.compare, v)\n    }));\n};\n\n/**\n * Assumes a linear scale\n */\nconst _findClearestCorner = (left: number[],\n                             right: number[],\n                             y_mean: number,\n                             forceCorner?: LegendCorner) : LegendPosition => {\n    const topLeft = (max(left) - y_mean) / y_mean;\n    const topRight = (max(right) - y_mean) / y_mean;\n    // Avoid lower corners by tipping the scale a little\n    const bottomLeft = ((y_mean * 2 - min(left)) / y_mean);\n    const bottomRight = ((y_mean * 1.5 - min(right)) / y_mean);\n    const minimum = min([topLeft, topRight, bottomLeft, bottomRight]);\n    if (forceCorner != null) {\n        if (forceCorner === LegendCorner.NW) {\n            return {corner: LegendCorner.NW, closestDataPoint: topLeft };\n        } else if (forceCorner === LegendCorner.NE) {\n            return {corner: LegendCorner.NE, closestDataPoint: topRight };\n        } else if (forceCorner === LegendCorner.SW) {\n            return {corner: LegendCorner.SW, closestDataPoint: bottomLeft };\n        } else if (forceCorner === LegendCorner.SE) {\n            return {corner: LegendCorner.SE, closestDataPoint: bottomRight };\n        }\n    }\n    if (topLeft === minimum) {\n        return {corner: LegendCorner.NW, closestDataPoint: topLeft };\n    } else if (topRight === minimum) {\n        return {corner: LegendCorner.NE, closestDataPoint: topRight };\n    } else if (bottomLeft === minimum) {\n        return {corner: LegendCorner.SW, closestDataPoint: bottomLeft };\n    } else if (bottomRight === minimum) {\n        return {corner: LegendCorner.SE, closestDataPoint: bottomRight };\n    } else {\n        return {corner: LegendCorner.NW, closestDataPoint: topLeft };\n    }\n};\n\nexport const chooseLegendPosition = (plotType: PlotType,\n                                     featureRanges: FeatureRanges,\n                                     data: any[],\n                                     forceCorner?: LegendCorner) : LegendPosition => {\n    const _splitHalfs = (pred: (any, number) => number,\n                         values: any[],\n                         c1: number,\n                         c2: number) : [number[], number[]] => {\n        return [\n            values.filter((v, i) => pred(v, i) < c1).map(v => v.y),\n            values.filter((v, i) => pred(v, i) > c2).map(v => v.y)\n        ];\n    };\n    const y_mean = average(featureRanges.y);\n    if (plotType.name === 'bubble') {\n        const c = average(featureRanges.x);\n        const x_min = featureRanges.x[0];\n        const x_max = featureRanges.x[1];\n        const c14 = (c + x_min) / 2;\n        const c34 = (c + x_max) / 2;\n        return _findClearestCorner(..._splitHalfs(d => d.x, data, c14, c34), y_mean, forceCorner);\n    } else if (plotType.name === 'line') {\n        const c = average(featureRanges.year);\n        return _findClearestCorner(..._splitHalfs(d => d.year, data, c, c), y_mean, forceCorner);\n    } else if (plotType.name === 'bar') {\n        const sortedData = data.sort((a, b) => a.scaledY - b.scaledY);\n        const c = data.length / 2;\n        return _findClearestCorner(..._splitHalfs((_, i) => i, sortedData, c, c), y_mean, forceCorner);\n    } else {\n        throw new Error('Unhandled plot type: ' + plotType.name);\n    }\n};\n","import {createSelector} from \"@reduxjs/toolkit\";\nimport {\n    selectAreas,\n    selectDivisionsByLevel,\n    selectFields,\n    selectLevels,\n    selectNumericFields,\n    selectValues,\n    selectTopologiesByAreaAndLevel,\n    selectCompareByFields,\n} from \"../features/data/dataSlice\";\nimport {selectActualControlValues} from \"../features/controls/controlsSlice\";\nimport {mapObjIndexed} from \"ramda\";\nimport {\n    Area,\n    CompareByField,\n    FeatureRanges, LegendCorner, LegendPosition,\n    PLOT_PRESETS,\n    PlotPreset\n} from \"./config\";\nimport {chooseLegendPosition, processItemValues} from \"./utils/domain\";\nimport {min, max} from 'd3-array';\nimport {selectYear} from \"../features/year/yearSlice\";\nimport {createColorPalette} from \"./utils/colors\";\nimport {selectPlotType} from \"../features/plotType/plotTypeSlice\";\nimport queryString from \"query-string\";\n\nexport const selectControlFieldValues = createSelector(\n    selectActualControlValues,\n    selectNumericFields,\n    (cv, nfs) => {\n        if (!nfs || nfs.length === 0) {\n            return cv;\n        }\n        return {\n            ...cv,\n            x: cv.x || nfs[0].id,\n            y: cv.y || nfs[1].id,\n            z: cv.z || nfs[2].id\n        }\n    }\n);\n\nexport const selectControlFields = createSelector(\n    selectAreas,\n    selectLevels,\n    selectFields,\n    selectCompareByFields,\n    selectControlFieldValues,\n    (areas, levels, fields, compareByFields, values) => {\n        return mapObjIndexed((v, k) => {\n            if (!fields || !v) {\n                return null;\n            } else if (k === 'area') {\n                return areas.byId[v];\n            } else if (k === 'compare') {\n                return v.map(cv => compareByFields.byId[cv]);\n            } else if  (k === 'level') {\n                return levels.byId[v];\n            } else {\n                return fields.byId[v];\n            }\n        }, values)\n    }\n);\n\nexport const selectColorPalette = createSelector(\n    selectControlFields,\n    (controls) => {\n        const cbfs = controls.compare;\n        return createColorPalette(cbfs);\n    }\n);\n\nexport const selectCurrentDivisions = createSelector(\n    selectDivisionsByLevel,\n    selectControlFieldValues,\n    (dvsByLevel, cv): any[] => {\n        return dvsByLevel[cv.level];\n    }\n);\n\nexport const selectTopologies = createSelector(\n    selectTopologiesByAreaAndLevel,\n    selectControlFieldValues,\n    (tbaal, cvs) => {\n        if (Object.keys(tbaal).length > 0) {\n            return tbaal[cvs.area] ? tbaal[cvs.area][cvs.level] : null;\n        } else {\n            return null;\n        }\n    }\n);\n\nexport const selectArea = createSelector(\n    selectAreas,\n    selectControlFieldValues,\n    (areas, cv) : Area => {\n        return areas.byId[cv.area];\n    }\n);\n\nexport const selectCurrentCompareDetails = createSelector(\n    selectCompareByFields,\n    selectControlFieldValues,\n    (cb, cv) : CompareByField[] => {\n        return cv.compare.map(c => cb.byId[c]);\n    }\n);\n\nconst summaryDataForAllYears = (vs, area, ds, cf, cp) => {\n    const avs = vs.filter(v => v.geoid === area.geoid);\n    return processItemValues(avs, cf, ds, cp);\n}\n\n\nconst individualDataForAllYears = (vs, area, ds, cf, cp) => {\n    const avs = vs.filter(v => v.geoid !== area.geoid);\n    return processItemValues(avs, cf, ds, cp);\n};\n\nconst individualDataIgnoringComparesForAllYears = (vs, area, ds, cf, cp) => {\n    const avs = vs.filter(v => v.geoid !== area.geoid);\n    return processItemValues(avs, {...cf, compare: []}, ds, cp);\n};\n\nexport const selectPlotData = createSelector(\n    selectPlotType,\n    selectValues,\n    selectArea,\n    selectCurrentDivisions,\n    selectControlFields,\n    selectYear,\n    selectColorPalette,\n    (plotType, vs, area, ds, cf, year, cp) => {\n        const summaryData = () => {\n            const avs = vs.filter(v => v.geoid === area.geoid && v.year === year);\n            return processItemValues(avs, cf, ds, cp);\n        };\n        const individualData = () => {\n            const avs = vs.filter(v => v.geoid !== area.geoid && v.year === year);\n            return processItemValues(avs, cf, ds, cp);\n        };\n        const individualDataIgnoringCompares = () => {\n            const avs = vs.filter(v => v.geoid !== area.geoid && v.year === year);\n            return processItemValues(avs, {...cf, compare: []}, ds, cp);\n        };\n\n        if (plotType.name === 'bubble') {\n            return individualData();\n        } else if (plotType.name === 'line') {\n            if (cf.compare.length === 0) {\n                return individualDataForAllYears(vs, area, ds, cf, cp);\n            } else {\n                return summaryDataForAllYears(vs, area, ds, cf, cp);\n            }\n        } else if (plotType.name === 'bar') {\n            if (cf.compare.length === 0) {\n                return individualData();\n            } else {\n                return summaryData();\n            }\n        } else if (plotType.name === 'map') {\n            return individualDataIgnoringCompares();\n        } else {\n            throw new Error('Unhandled plot type: ' + plotType.name);\n        }\n    }\n);\n\nexport const selectFeatureRanges = createSelector(\n    selectPlotType,\n    selectValues,\n    selectArea,\n    selectCurrentDivisions,\n    selectControlFields,\n    selectColorPalette,\n    (plotType, vs, area, ds, cf, cp) : FeatureRanges => {\n        const data = (() => {\n            if (plotType.name === 'map') {\n                return individualDataIgnoringComparesForAllYears(vs, area, ds, cf, cp);\n            } else if (plotType.name === 'bubble' || cf.compare.length === 0) {\n                return individualDataForAllYears(vs, area, ds, cf, cp);\n            } else {\n                return summaryDataForAllYears(vs, area, ds, cf, cp);\n            }\n        })();\n        const fvs = {\n            x: data.map(v => v.x),\n            y: data.map(v => v.y),\n            z: data.map(v => v.z),\n            year: data.map(v => v.year)\n        }\n        return {\n            x: [min(fvs.x), max(fvs.x)],\n            y: [min(fvs.y), max(fvs.y)],\n            z: [min(fvs.z), max(fvs.z)],\n            year: [min(fvs.year), max(fvs.year)]\n        };\n    }\n);\n\nexport const selectLegendPosition = createSelector(\n    selectPlotType,\n    selectPlotData,\n    selectFeatureRanges,\n    (plotType, data, featureRanges) : LegendPosition | undefined => {\n        if (featureRanges.y[0] == null) {\n            return undefined;\n        } else if (plotType.name === 'bubble' || plotType.name === 'line') {\n            return chooseLegendPosition(plotType, featureRanges, data);\n        } else if (plotType.name === 'bar') {\n            return chooseLegendPosition(plotType, featureRanges, data, LegendCorner.NE);\n        } else {\n            throw new Error('Unhandled plot type: ' + plotType.name);\n        }\n    }\n);\n\nexport const selectPlotPresets = createSelector(\n    selectAreas,\n    (areas) : PlotPreset[] => PLOT_PRESETS.map(p => ({\n        title: p.title,\n        area: areas.byId[p.params.area],\n        url: 'plot?' + queryString.stringify(p.params, {arrayFormat: 'bracket'})\n    })));\n\nexport const isLoaded = createSelector(\n    selectValues,\n    (values) => {\n        return values.length > 0;\n    }\n);\n","import React from \"react\";\nimport {defaultStyles as defaultTooltipStyles, useTooltip} from \"@visx/tooltip\";\nimport {\n    all,\n    curry,\n    groupBy,\n    keys,\n    last,\n    map,\n    range,\n    reduce,\n    tail,\n    values\n} from \"ramda\";\nimport useTouchOutside from \"./useTouchOutside\";\nimport TooltipWithBounds from '../dashboard/CustomTooltipWithBounds';\nimport {animated, useSpring} from \"react-spring\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectPlotType} from \"../features/plotType/plotTypeSlice\";\nimport {selectControlFields} from \"../dashboard/selectors\";\nimport {FIELD_TYPE_FORMAT_VALUES_MAP} from \"../dashboard/config\";\n\nconst DEFAULT_OPTIONS = {\n    selectedOpacity: 0.8,\n    unselectedOpacity: 0.15,\n    defaultOpacity: 0.6,\n    animate: true\n};\n\ntype ItemMap = Map<string, any[]> | Record<string, any[]>;\ntype KeyValue = any | ((event: Event) => any)\n\nconst groupByKeys = (keyFields: string[], items: any[]) : ItemMap => {\n    const im = groupBy(item => item[keyFields[0]], values(items));\n    if (keyFields.length === 1) {\n        return im;\n    } else {\n        return map(curry(groupByKeys)(tail(keyFields)), im);\n    }\n};\n\nconst lookupKeys = (keys: string[], itemMap: ItemMap) => {\n    return reduce((im, k) => im[k], itemMap, keys);\n};\n\nconst lookupItem = (keys: string[], itemMap: ItemMap) => {\n    const results = lookupKeys(keys, itemMap);\n    if (results.length === 1) {\n        return results[0];\n    } else {\n        throw new Error(`Found ${results.length} results for lookup of ${keys}`);\n    }\n};\n\nconst matchesAllKeys = (keysToMatch: string[], itemKeys: string[]) : boolean => {\n    const n = Math.min(keysToMatch.length, itemKeys.length);\n    // Keys will be coerced into strings, but they might be originally numbers\n    // eslint-disable-next-line eqeqeq\n    return all(i => keysToMatch[i] == itemKeys[i], range(0, n));\n};\n\nconst TooltipContent = ({item}) => {\n    const controls = useAppSelector(selectControlFields);\n    const plotType = useAppSelector(selectPlotType);\n\n    const FormattedValue = ({field}: {field: string}) => {\n        const formatValue = FIELD_TYPE_FORMAT_VALUES_MAP[controls[field].type];\n        return (\n            plotType.fields[field] && controls[field] && (\n                <div>\n                    {controls[field].name}:{' '}\n                    {formatValue(item[field])}\n                </div>\n            )\n        );\n    };\n\n    return (\n        <div className='tooltip-content'>\n            <div className='tooltip-title'>\n                <h3>{item.name}</h3>\n                <div className='year'>{item.year}</div>\n            </div>\n            <div className='tooltip-body'>\n                <FormattedValue field='y' />\n                <FormattedValue field='x' />\n            </div>\n        </div>\n    );\n};\n\nconst useSelect = (items: any[], keyFields: string[],\n                   showLabel, disableInteraction = false) => {\n    const nKeyFields = keyFields.length;\n    const itemMap = groupByKeys(keyFields, items);\n    const [selectedKeys, selectKeys] = React.useState<string[]>(null);\n    const {\n        tooltipOpen,\n        tooltipLeft,\n        tooltipTop,\n        tooltipData,\n        showTooltip,\n        hideTooltip\n    } = useTooltip<React.ReactNode>();\n\n    const select = React.useCallback(\n        (itemKeys: string[]) => {\n            if (!selectedKeys || !matchesAllKeys(selectedKeys, itemKeys)) {\n                selectKeys(itemKeys);\n                const item = lookupItem(itemKeys, itemMap);\n                showTooltip({\n                    tooltipData: <TooltipContent item={item} />,\n                    tooltipLeft: item.scaledX,\n                    tooltipTop: item.scaledY,\n                });\n            }\n        },\n        [showTooltip, itemMap, selectedKeys]\n    );\n\n    const deselect = React.useCallback(() => {\n        selectKeys(null);\n        hideTooltip();\n    }, [hideTooltip]);\n\n    const getKeys = (key1) : string[] => {\n        switch (nKeyFields) {\n            case 1: return [key1];\n            case 2: return [key1, last(keys(itemMap[key1]))];\n            default: throw new Error(\"Unsupported # of keys: \" + nKeyFields);\n        }\n    };\n\n    React.useEffect(() => {\n        if (showLabel) {\n            select(getKeys(showLabel));\n        }\n    });\n\n    const Tooltip = React.memo(() => {\n        const ref = React.useRef(null);\n        // On touch outside isn't needed for closing the tooltip,\n        // but actually to be able to select the next point (on touchscreen)\n        useTouchOutside(ref, deselect);\n        return tooltipData ? (\n            <>\n                {tooltipOpen && tooltipData && (\n                    // @ts-ignore\n                    <TooltipWithBounds\n                        top={tooltipTop}\n                        left={tooltipLeft}\n                        style={{\n                            ...defaultTooltipStyles,\n                            fontSize: '1em',\n                            padding: '0.6em',\n                            margin: '0.75em'\n                        }}\n                        className='tooltip MuiPaper-elevation5'\n                    >\n                        <div ref={ref}>\n                            {tooltipData}\n                        </div>\n                    </TooltipWithBounds>\n                )}\n            </>\n        ) : null;\n    });\n\n    const makeSelectable = React.useCallback((keyValues: any[], c, options= DEFAULT_OPTIONS) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const [{ animOpacity }, setAnim] = useSpring(() => ({\n            animOpacity: options.defaultOpacity,\n        }));\n        const isSelected = selectedKeys && matchesAllKeys(selectedKeys, keyValues);\n        const opacity = isSelected ? options.selectedOpacity : selectedKeys ? options.unselectedOpacity : options.defaultOpacity;\n        const animate = options.animate == null || options.animate === true;\n        if (animate) {\n            setAnim({animOpacity: opacity});\n            // return React.cloneElement(c, {\n            //     key: keyValues.join('_'),\n            //     fillOpacity: animOpacity.to(x => x),\n            //     strokeOpacity:  animOpacity.to(x => x)\n            // });\n            return (\n                <animated.g\n                    fillOpacity={animOpacity.to(x => x)}\n                    strokeOpacity={animOpacity.to(x => x)}\n                    key={keyValues.join('_')}\n                >\n                    {c}\n                </animated.g>\n            );\n        } else {\n            return React.cloneElement(c, {\n                ...c.props,\n                key: keyValues.join('_'),\n                fillOpacity: opacity,\n                strokeOpacity: opacity\n            });\n        }\n    }, [selectedKeys]);\n\n    const makeInteractive = React.useCallback((keyValues: KeyValue[], c) => {\n        if (disableInteraction) {\n            return c;\n        } else {\n            const callback = (event) => {\n                const resolvedKeyValues = keyValues.map(k => k instanceof Function ? k(event) : k);\n                select(resolvedKeyValues);\n            }\n            return React.cloneElement(c, {\n                ...c.props,\n                onTouchStart: callback,\n                onMouseMove: callback,\n                onMouseLeave: deselect\n            });\n        }\n    }, [select, deselect, disableInteraction]);\n\n    const makeSelectableAndInteractive = React.useCallback(\n        (keyValues: KeyValue[], c, options= DEFAULT_OPTIONS) => {\n            const concreteKeys = keyValues.filter(k => !(k instanceof Function))\n            return makeInteractive(keyValues, makeSelectable(concreteKeys, c, options));\n        }, [makeSelectable, makeInteractive]);\n\n    return {makeSelectable, makeInteractive, makeSelectableAndInteractive, Tooltip};\n};\n\nexport default useSelect;\n","import React from \"react\";\nimport {animated, useSprings} from 'react-spring';\nimport {scaleLinear, scalePower} from \"@visx/scale\";\nimport useSelect from \"../hooks/useSelect\";\nimport {FeatureRanges, ANIMATION_DURATION} from \"./config\";\n\nconst paddingPct = 0.1;\n\nexport type BubblePlotProps = {\n    data: any[],\n    featureRanges: FeatureRanges\n    showLabel?: string\n    disableInteraction?: boolean\n    width: number\n    height: number\n};\n\nconst BubblePlot = ({\n    data,\n    featureRanges,\n    showLabel = null,\n    disableInteraction = false,\n    width,\n    height\n}: BubblePlotProps) => {\n    const padding = Math.min(width, height) * paddingPct;\n    const xScale = React.useMemo(() =>\n        scaleLinear<number>({\n            domain: featureRanges.x,\n            range: [padding, width - padding],\n            round: true\n        }), [featureRanges, padding, width]);\n    const yScale = React.useMemo(() =>\n        scaleLinear<number>({\n            domain: featureRanges.y,\n            range: [height - padding / 2, padding],\n            round: true\n        }), [featureRanges, padding, height]);\n    const sizeScale = React.useMemo(() =>\n        scalePower<number>({\n            domain: [featureRanges.z[0] * 80, featureRanges.z[1] * 120],\n            range: [0.01 * (height - padding), 0.06 * (height - padding)],\n            exponent: 0.5\n        }), [featureRanges, padding, height]);\n    const items = data\n        .filter(v => v.x != null && v.y != null && v.z != null)\n        .map(v => ({\n            ...v,\n            scaledX: xScale(v.x),\n            scaledY: yScale(v.y),\n            size: sizeScale(v.z * 100)\n        }));\n\n    const {makeSelectableAndInteractive, Tooltip} =\n        useSelect(items, ['name'], showLabel, disableInteraction);\n    const animFn = index => ({\n        animX: items[index].scaledX,\n        animY: items[index].scaledY,\n        animSize: items[index].size,\n        config: {\n            duration: ANIMATION_DURATION\n        }\n    });\n    const [springs, api] = useSprings(items.length, animFn);\n    api.start(animFn);\n\n    return (\n        <>\n            <svg width={width} height={height}>\n                {items.map((item, i) => {\n                    return makeSelectableAndInteractive([item.name],\n                        <animated.circle\n                            cx={springs[i].animX}\n                            cy={springs[i].animY}\n                            r={springs[i].animSize}\n                            fill={item.color + 'EE'}\n                            stroke={item.color}\n                        />\n                    );\n                })}\n            </svg>\n            <Tooltip />\n        </>\n    );\n};\n\nexport default BubblePlot;\n","import React from 'react';\nimport { geoPath, geoAlbersUsa, geoCentroid } from 'd3-geo';\nimport {animated, useSprings} from 'react-spring';\nimport { AlbersUsa } from '@visx/geo';\nimport * as topojson from 'topojson-client';\nimport {zipObj} from \"ramda\";\nimport { hcl } from 'd3-color';\nimport { scaleLinear } from 'd3-scale';\nimport { interpolateHcl } from 'd3-interpolate';\nimport {useAppSelector} from \"../app/hooks\";\nimport useSelect from \"../hooks/useSelect\";\nimport {DataField, FeatureRanges, ANIMATION_DURATION} from \"./config\";\nimport {\n    selectArea, selectCurrentDivisions,\n    selectTopologies\n} from \"./selectors\";\n\nexport type MapPlotProps = {\n    data: any[]\n    featureRanges: FeatureRanges\n    width: number\n    height: number\n    yAxisVar: DataField\n    showLabel?: string\n    disableInteraction?: boolean\n};\n\ninterface FeatureShape {\n    type: 'Feature';\n    id: string;\n    geometry: { coordinates: topojson.Position[][]; type: 'MultiPolygon' };\n    properties: { };\n}\nconst projection = geoAlbersUsa();\nconst usMapOffset: [number, number] = [0.025, 0];\n\nconst opacityOptions = {\n    selectedOpacity: 1,\n    unselectedOpacity: 0.2,\n    defaultOpacity: 0.8,\n    animate: true\n};\n\nconst strokeFactor = 0.002;\n\nconst DumbMapPlot = ({ data, featureRanges, width, height, area, divisions, topologies,\n                         showLabel = null, disableInteraction = false }) => {\n    const scale = Math.round(Math.min(width, height) * 1.4);\n    const topoFeature = topojson.feature(topologies, topologies.objects.data);\n    const { features: featColl } = topoFeature as {\n        type: 'FeatureCollection';\n        features: FeatureShape[];\n    };\n    const colorScale = scaleLinear()\n        .domain(featureRanges.y)\n        // @ts-ignore\n        .range([\n            hcl('rgba(41,122,204,0.1)'),\n            hcl('#0265c9')])\n        // @ts-ignore\n        .interpolate(interpolateHcl)\n\n    const path = geoPath().projection(projection);\n    projection.scale(1).translate(area.id === 'us' ? usMapOffset : [0, 0]);\n    const b = path.bounds(topoFeature);\n    const s = .95 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height);\n    const t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\n    projection.scale(s).translate([t[0], t[1]]);\n\n    const tempItems = data.map(v => ({\n        ...v,\n        ...divisions[v.geoid],\n        color: colorScale(v.y),\n    }));\n    const itemMap = zipObj(tempItems.map(d => d.geoid), tempItems);\n    const items = featColl.map(f => {\n        const c = projection(geoCentroid(f));\n        return {\n            ...itemMap[f.id],\n            scaledX: c[0],\n            scaledY: c[1]\n        };\n    });\n\n    const {makeSelectableAndInteractive, Tooltip} =\n        useSelect(items, ['name'], showLabel, disableInteraction);\n    const animFn = index => ({ \n        animColor: items[index].color,\n        config: {\n            duration: ANIMATION_DURATION\n        }\n    });\n    const [springs, api] = useSprings(items.length, animFn);\n    api.start(animFn);\n    return width < 10 ? null : (\n        <>\n            <svg width={width} height={height}>\n                <AlbersUsa<FeatureShape>\n                    data={featColl}\n                    scale={s}\n                    translate={[t[0], t[1]]}\n                >\n                    {({ features}) =>\n                        features\n                            .map(({ feature, path }, i) => {\n                                const item = itemMap[feature.id];\n                                if (!item) {\n                                    return null;\n                                }\n                                return makeSelectableAndInteractive([item.name],\n                                    <animated.path\n                                        className='map-poly'\n                                        d={path || ''}\n                                        fill={springs[i].animColor}\n                                        strokeWidth={item.name === 'Alaska' ? 0 : scale * strokeFactor}\n                                    />, opacityOptions\n                                )\n                            })\n                    }\n                </AlbersUsa>\n            </svg>\n            <Tooltip />\n        </>\n    );\n};\n\nconst MapPlot = (props: MapPlotProps) => {\n    const area = useAppSelector(selectArea);\n    const topologies = useAppSelector(selectTopologies);\n    const divisions = useAppSelector(selectCurrentDivisions);\n    return topologies &&\n      <DumbMapPlot {...props}\n                   area={area}\n                   divisions={divisions}\n                   topologies={topologies} />\n}\n\nexport default MapPlot;\n","import React from 'react';\nimport { LinePath } from '@visx/shape';\nimport {scaleLinear} from \"@visx/scale\";\nimport {GlyphCircle} from '@visx/glyph';\nimport { localPoint } from '@visx/event';\nimport { voronoi } from '@visx/voronoi';\nimport {groupBy, curry} from \"ramda\";\nimport useSelect from \"../hooks/useSelect\";\nimport {FeatureRanges} from \"./config\";\n\nconst hPaddingPct = 0.015;\nconst vPaddingPct = 0.1\n\nexport type LinePlotProps = {\n    data: any[]\n    featureRanges: FeatureRanges\n    showLabel?: string\n    disableInteraction?: boolean\n    width: number\n    height: number\n};\n\nconst lineOptions = {\n    selectedOpacity: 0.9,\n    unselectedOpacity: 0.15,\n    defaultOpacity: 0.6,\n    animate: true\n};\n\nconst pointOptions = {\n    selectedOpacity: 1,\n    unselectedOpacity: 0,\n    defaultOpacity: 0,\n    animate: false\n};\n\nconst LinePlot = ({\n    data,\n    featureRanges,\n    showLabel = null,\n    disableInteraction = false,\n    width,\n    height\n}: LinePlotProps) => {\n    const hPadding = React.useMemo(() =>\n            height * hPaddingPct,\n        [height]\n    );\n    const vPadding = React.useMemo(() =>\n            width * vPaddingPct,\n        [width]\n    );\n    const xScale = scaleLinear<number>({\n        domain: featureRanges.year,\n        range: [hPadding, width - hPadding],\n        round: true\n    });\n    const yScale = scaleLinear<number>({\n        domain: featureRanges.y,\n        range: [height - vPadding, vPadding],\n        round: true\n    });\n    const items = data\n        .map(d => ({\n            ...d,\n            scaledX: xScale(d.year),\n            scaledY: yScale(d.y),\n        }));\n\n    const lines = groupBy(d => d.name, items);\n    const lineKeys = Object.keys(lines);\n    const {makeSelectable, makeSelectableAndInteractive, Tooltip} =\n        useSelect(items, ['name', 'year'], showLabel, disableInteraction);\n    const scaledX = (d) => d.scaledX;\n    const scaledY = (d) => d.scaledY;\n    const strokeWidth = Math.max(Math.round(width / 150), 1);\n    const circleSize = Math.round(strokeWidth * 16);\n\n    const voronoiInstance = voronoi({\n        x: scaledX,\n        y: scaledY,\n        width,\n        height\n    });\n\n    const findNearest = (line, event) => {\n        const point = localPoint(event);\n        const nearest = voronoiInstance(line).find(point.x, point.y).data;\n        return nearest.year;\n    };\n\n    return (\n        <>\n            <svg width={width} height={height}>\n                <>\n                    {lineKeys.map((key) => {\n                        const line = lines[key];\n                        return (\n                            <g key={key}>\n                                {makeSelectableAndInteractive([line[0].name, curry(findNearest)(line)],\n                                    <LinePath\n                                    data={line}\n                                    x={(point: any) => point.scaledX}\n                                    y={(point: any) => point.scaledY}\n                                    stroke={line[0].color}\n                                    strokeWidth={strokeWidth}\n                                    />, lineOptions\n                                )}\n                                {line.map(point => makeSelectable([point.name, point.year],\n                                    <GlyphCircle\n                                    left={point.scaledX}\n                                    top={point.scaledY}\n                                    fill={point.color}\n                                    stroke='#FFFFFF'\n                                    size={circleSize}\n                                    strokeWidth={Math.max(strokeWidth / 3, 1)}\n                                    />, pointOptions\n                                ))}\n                            </g>\n                        );\n                    })}\n                </>\n            </svg>\n            <Tooltip />\n        </>\n    );\n};\n\nexport default LinePlot;\n","import React from \"react\";\nimport {scaleBand, scaleLinear} from \"@visx/scale\";\nimport useSelect from \"../hooks/useSelect\";\nimport {animated, useSprings} from 'react-spring';\nimport {range} from 'ramda';\nimport {FeatureRanges, PCT_V_SPACE_LEFT_FOR_LEGEND, ANIMATION_DURATION} from \"./config\";\n\nconst hPaddingPct = 0.015;\nconst vPaddingPct = 0.02\n\nexport type BarPlotProps = {\n    data: any[]\n    featureRanges: FeatureRanges\n    showLabel?: string\n    disableInteraction?: boolean\n    width: number\n    height: number\n};\n\nconst getHeightAdjustment = (featureRanges: FeatureRanges, height: number, startAtZero: boolean = true) : number => {\n    const domain = featureRanges.y[1] - (startAtZero ? 0 : featureRanges.y[0]);\n    const pctOfLowest = featureRanges.y[0] / domain;\n    const range = 1 - PCT_V_SPACE_LEFT_FOR_LEGEND;\n    return height - Math.min(height, height * (range / pctOfLowest));\n};\n\nconst BarPlot = ({\n    data,\n    featureRanges,\n    showLabel = null,\n    disableInteraction = false,\n    width,\n    height\n}: BarPlotProps) => {\n    const hPadding = React.useMemo(() =>\n        Math.min(width, height) * hPaddingPct,\n        [width, height]\n    );\n    const vPadding = React.useMemo(() =>\n        Math.min(width, height) * vPaddingPct,\n        [width, height]\n    );\n    const heightAdjustment = getHeightAdjustment (featureRanges, height);\n    const yScale = React.useMemo(() => scaleLinear<number>({\n        domain: [0, featureRanges.y[1]],\n        range: [height - vPadding, heightAdjustment + vPadding],\n        round: true\n    }), [height, heightAdjustment, vPadding, featureRanges]);\n    const tempItems: any[] = data\n        .map(v => ({\n            ...v,\n            scaledY: yScale(v.y)\n        }))\n        .sort((a, b) => a.scaledY - b.scaledY);\n    const xScale = React.useMemo(() => scaleBand<number>({\n        range: [hPadding, width - hPadding],\n        round: false,\n        domain: range(0, tempItems.length),\n        padding: 0.25,\n    }), [tempItems, hPadding, width]);\n    const items = tempItems.map((item, i) => ({\n        ...item,\n        scaledX: xScale(i)\n    }))\n    const {makeSelectableAndInteractive, Tooltip} =\n        useSelect(items, ['name'], showLabel, disableInteraction);\n    const animFn = index => ({\n        animY: items[index].scaledY,\n        animHeight: height - items[index].scaledY,\n        config: {\n            duration: ANIMATION_DURATION\n        }\n    });\n    const [springs, api] = useSprings(items.length, animFn);\n    api.start(animFn);\n    return (\n        <>\n            <svg width={width} height={height - vPadding}>\n                {items.map((item, i) => {\n                    return makeSelectableAndInteractive([item.name],\n                        <animated.rect\n                            y={springs[i].animY}\n                            height={springs[i].animHeight}\n                            x={item.scaledX}\n                            width={xScale.bandwidth()}\n                            fill={item.color}\n                        />\n                    )\n                })}\n            </svg>\n            <Tooltip />\n        </>\n    );\n};\n\nexport default BarPlot;\n","\n\nexport const setSearchPart = (s: string) => {\n    const parts = window.location.hash.split('?');\n    window.location.hash = [parts[0], s.replace('?', '')].join('?');\n};\n","import React from \"react\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport useDarkMode from 'use-dark-mode';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n// import {TransitionProps} from \"@mui/material/transitions\";\nimport {\n    Button,\n    // Collapse,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    FormControl,\n    FormGroup,\n    IconButton,\n    InputLabel,\n    NativeSelect,\n    TextField\n} from \"@mui/material\";\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    LinkedinIcon,\n    LinkedinShareButton,\n    PinterestIcon,\n    PinterestShareButton,\n    RedditIcon,\n    RedditShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n} from \"react-share\";\nimport FileCopyOutlinedIcon from '@mui/icons-material/FileCopyOutlined';\nimport * as htmlToImage from 'html-to-image';\nimport {\n    Area,\n    AxisLabelSource, PlotType,\n    SHARE_SIZE_MAP,\n    SHARE_SIZES\n} from \"./config\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectPlotType} from \"../features/plotType/plotTypeSlice\";\nimport {selectYear} from \"../features/year/yearSlice\";\nimport {selectArea} from \"./selectors\";\nimport './sharing.scss';\nimport {useTheme} from \"@mui/system\";\nimport {useLocation} from \"react-router-dom\";\nimport {setSearchPart} from \"./utils/url\";\n\nconst SCALE = 1;\nconst MAX_PREVIEW_WIDTH = 208 / SCALE;\nconst MAX_PREVIEW_HEIGHT = 208 / SCALE;\n\nconst calculatePreviewSize = ({width, height}) => {\n    const ratio = height / width;\n    const h1 = Math.min(ratio * MAX_PREVIEW_WIDTH, MAX_PREVIEW_HEIGHT);\n    const w = Math.min(h1 / ratio, MAX_PREVIEW_WIDTH);\n    const h = Math.min(w * ratio);\n    return {width: w, height: h};\n};\n\n// const ShareTransition = React.forwardRef(function Transition(\n//     props: TransitionProps & { children?: React.ReactElement<any, any> },\n//     ref: React.Ref<unknown>,\n// ) {\n//     return <Collapse ref={ref} {...props} timeout={500} />;\n// });\n\nconst BaseDialog = ({isOpen, setOpen, children, fullScreen=false}) => {\n    const [alreadyOpen, setAlreadyOpen] = React.useState(false);\n    const {search} = useLocation();\n\n    React.useEffect(() => {\n        if (isOpen) {\n            if (!search.includes('dialog=open')) {\n                if (alreadyOpen) {\n                    setOpen(false);\n                    setAlreadyOpen(false);\n                } else {\n                    setSearchPart([search, 'dialog=open'].join('&'));\n                    setAlreadyOpen(true);\n                }\n            }\n        }\n    }, [search, setOpen, isOpen, alreadyOpen]);\n\n    return (\n        <Dialog\n            className='share-dialog'\n            open={isOpen}\n            onClose={() => {\n                setOpen(false);\n                window.history.back();\n            }}\n            fullScreen={fullScreen}\n            keepMounted\n        >\n            {children}\n        </Dialog>\n    );\n};\n\nconst createPlotTitle = (plotType: PlotType,\n                         area: Area,\n                         year: number,\n                         compares: { name: string }[],\n                         xAxisLabel: string,\n                         yAxisLabel: string) => {\n    const cs = compares.length > 0 ? ' by ' + compares.map(c => c.name).join('/') : ''\n    return (!plotType.xAxisLabelSource || plotType.xAxisLabelSource === AxisLabelSource.COMPARE ?\n        yAxisLabel + cs :\n        yAxisLabel + ' / ' + xAxisLabel.toLowerCase() + cs) +\n        (plotType.name === 'line' ? '' : ` (${area.abbrev}, ${year})`)\n};\n\nexport const DumbImageDialog = ({plot, isOpen, setOpen, label, setLabel, pageInDarkMode,\n                                compares, xAxisLabel, yAxisLabel, showAxisLabels,\n                                plotType, area, year, items}) => {\n    const plotTitle = createPlotTitle(plotType, area, year, compares, xAxisLabel, yAxisLabel);\n    const defaultShareSize = SHARE_SIZES[0];\n    const [sharePresetSize, setSharePresetSize] = React.useState(defaultShareSize);\n    const [previewSize, setPreviewSize] = React.useState({\n        width: MAX_PREVIEW_WIDTH,\n        height: MAX_PREVIEW_HEIGHT\n    });\n    const [shareSize, setShareSize] = React.useState({\n        width: defaultShareSize.width,\n        height: defaultShareSize.height\n    });\n    const [format, setFormat] = React.useState('PNG');\n    const [imgData, setImgData] = React.useState<string>(null);\n    const fontSize = Math.round(previewSize.width / 40);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const [darkModeState, setDarkModeState] = React.useState(pageInDarkMode);\n    const darkModeRef = React.useRef({});\n    darkModeRef.current = darkModeState;\n\n    const ImagePreview = () => {\n        const darkMode = useDarkMode(pageInDarkMode, {\n            classNameDark: 'preview-dark-mode',\n            classNameLight: 'preview-light-mode',\n            storageKey: 'previewDarkMode'\n        });\n        React.useEffect(() => {\n            darkModeRef.current ? darkMode.enable() : darkMode.disable();\n        }, [darkMode]);\n        return (\n            <div className='gen-target'>\n                <div className='plot-frame'>\n                    <div className='title'>{plotTitle}</div>\n                    <div className='subtitle'>\n                        Statistipedia: statistipedia.org/explore\n                    </div>\n                    {plot}\n                </div>\n                { showAxisLabels && xAxisLabel &&\n                  <div className='x-axis'>\n                      {xAxisLabel || 'Year'}\n                  </div>\n                }\n                { showAxisLabels && yAxisLabel &&\n                  <div className='y-axis'>\n                      {yAxisLabel}\n                  </div>\n                }\n            </div>\n        );\n    };\n\n    const canvasToPng = (canvas) => {\n        return canvas.toDataURL(\"image/png\", 1.0);\n    };\n\n    const getGenerateFn = () => {\n        switch (format) {\n            case 'PNG': return htmlToImage.toPng;\n            case 'SVG': return htmlToImage.toSvg;\n            default: throw Error('Unhandled format: ' + format);\n        }\n    };\n\n    const GenerateDialog = ({setImgData}) => {\n        const generate = () => {\n            const el: any = document\n                .getElementById('preview')\n                .getElementsByClassName('gen-target')[0];\n            getGenerateFn()(el, {\n                canvasWidth: shareSize.width,\n                canvasHeight: shareSize.height,\n                pixelRatio: 1,\n                width: el.clientWidth,\n                height: el.clientHeight,\n                // skipAutoScale: true,\n                style: {\n                    transform: 'scale(1)'\n                }\n            }).then((dataUrl) => {\n                setImgData(dataUrl);\n            });\n        };\n\n        const setNewSize = (newSize) => {\n            setShareSize(newSize);\n            setPreviewSize(calculatePreviewSize(newSize));\n        };\n\n        const onPresetSizeSelect = (event) => {\n            const name = event.target.value;\n            if (name === 'Custom') {\n                setSharePresetSize(null);\n                document\n                    .getElementsByClassName('MuiDialog-container')[0]\n                    .getElementsByClassName('MuiPaper-root')[0]\n                    .scrollTo(0, 9999);\n            } else {\n                const s = SHARE_SIZE_MAP[name];\n                setSharePresetSize(s);\n                setNewSize(s);\n            }\n        };\n\n        const onSizeChange = (newSize) => {\n            setSharePresetSize(null);\n            setNewSize(newSize);\n        };\n\n        // const onLabelChange = (event) => {\n        //     const value = event.target.value;\n        //     setLabel(value === ' ' ? null : value);\n        // };\n\n        const onFormatChange = (event) => {\n            const value = event.target.value;\n            setFormat(value);\n        };\n\n        const onModeChange = (event) => {\n            const value = event.target.value;\n            const b = value === 'Dark'\n            setDarkModeState(b);\n        };\n\n        return (\n            <>\n                <div className='dialog-title'>Generate image</div>\n                <DialogContent className='dialog-content'>\n                    <div id='preview-container'>\n                        <div id='preview' style={{...previewSize, fontSize}}>\n                            <ImagePreview />\n                        </div>\n                        <div className=\"MuiFormLabel-root caption\">\n                            Preview\n                        </div>\n                    </div>\n                    <div className='share-controls'>\n                        <div className='size-inputs'>\n                            <FormControl>\n                                <InputLabel variant=\"standard\" htmlFor=\"preset-size\">Size</InputLabel>\n                                <NativeSelect id=\"preset-size\"\n                                              onChange={onPresetSizeSelect}\n                                              value={sharePresetSize ? sharePresetSize.name : 'Custom'}>\n                                    <optgroup label=\"Presets\">\n                                        {SHARE_SIZES.map((s) => (\n                                            <option key={s.name}>{s.name}</option>\n                                        ))}\n                                    </optgroup>\n                                    <option>Custom</option>\n                                </NativeSelect>\n                            </FormControl>\n                            <FormGroup row className='custom-size-inputs top-padded row'>\n                                {['width', 'height'].map((s) => (\n                                    <FormControl key={s} className='top-padded custom-size-input'>\n                                        <TextField helperText={s}\n                                                   variant=\"standard\"\n                                                   onChange={(event) =>\n                                                       onSizeChange({...shareSize, [s]: event.target.value})}\n                                                   value={shareSize[s]} />\n                                    </FormControl>\n                                ))}\n                            </FormGroup>\n                            {/*<FormGroup row className='row'>*/}\n                            {/*    <FormControl className=\"form-control\">*/}\n                            {/*        <InputLabel variant=\"standard\" htmlFor=\"label\">Labeled item</InputLabel>*/}\n                            {/*        <NativeSelect id=\"label\"*/}\n                            {/*                      value={label ? label : ' '}*/}\n                            {/*                      onChange={onLabelChange}>*/}\n                            {/*            <option value=' ' />*/}\n                            {/*            {items.map(({name}) => (*/}\n                            {/*                <option key={name}>{name}</option>*/}\n                            {/*            ))}*/}\n                            {/*        </NativeSelect>*/}\n                            {/*    </FormControl>*/}\n                            {/*</FormGroup>*/}\n                            <FormGroup row className='top-padded row'>\n                                <FormControl className=\"form-control\">\n                                    <InputLabel variant=\"standard\" htmlFor=\"format\">Format</InputLabel>\n                                    <NativeSelect id=\"format\"\n                                                  value={format}\n                                                  onChange={onFormatChange}\n                                    >\n                                        <option>PNG</option>\n                                        <option>SVG</option>\n                                    </NativeSelect>\n                                </FormControl>\n                                <FormControl className=\"form-control\">\n                                    <InputLabel variant=\"standard\" htmlFor=\"light_dark\">\n                                        Mode\n                                    </InputLabel>\n                                    <NativeSelect id=\"light_dark\"\n                                                  value={darkModeRef.current ? 'Dark' : 'Light'}\n                                                  onChange={onModeChange}>\n                                        <option>Light</option>\n                                        <option>Dark</option>\n                                    </NativeSelect>\n                                </FormControl>\n                            </FormGroup>\n                            {/*<FormControl className=\"form-control\">*/}\n                            {/*    <FormControlLabel*/}\n                            {/*        control={*/}\n                            {/*            <Switch*/}\n                            {/*                color=\"primary\"*/}\n                            {/*            />*/}\n                            {/*        }*/}\n                            {/*        label=\"Add QR code\"*/}\n                            {/*    />*/}\n                            {/*</FormControl>*/}\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions className='dialog-actions'>\n                    <Button onClick={() => window.history.back()}>Close</Button>\n                    <Button onClick={generate}>Generate</Button>\n                </DialogActions>\n            </>\n        );\n    };\n\n    const DownloadDialog = ({imgData, setImgData}) => {\n        const url = window.location.href;\n\n        // const share = () => {\n        //     if (navigator.share) {\n        //         navigator.share({\n        //             title: 'web.dev',\n        //             text: 'Check out web.dev.',\n        //             // url: 'https://web.dev/',\n        //             files: [image]\n        //         })\n        //             .then(() => alert('Successful share'))\n        //             .catch((error) => alert(error));\n        //     }\n        // };\n        return (\n            <>\n                <div className='dialog-title'>Download image</div>\n                <DialogContent className='dialog-content'>\n                    <div className='generated-image'>\n                        <a download={plotTitle} href={imgData}>\n                            <img alt=\"Generated\" src={imgData} />\n                        </a>\n                    </div>\n                    <div className='share-controls'>\n                        <div className='image-share-btns'>\n                            <div className='image-share-btn'>\n                                <PinterestShareButton\n                                    url={url}\n                                    media={imgData}\n                                >\n                                    <PinterestIcon round />\n                                    <div style={{color: '#C9242E'}}>\n                                        Share on Pinterest\n                                    </div>\n                                </PinterestShareButton>\n                            </div>\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions className='dialog-actions'>\n                    <Button onClick={() => setImgData(null)}>Back</Button>\n                    <Button onClick={() => window.history.back()}>Close</Button>\n                    <Button href={imgData} download={plotTitle}>Download</Button>\n                </DialogActions>\n            </>\n        )\n    };\n    return (\n        <BaseDialog isOpen={isOpen} setOpen={setOpen} fullScreen={fullScreen}>\n            {imgData\n                ? <DownloadDialog imgData={imgData} setImgData={setImgData} />\n                : <GenerateDialog setImgData={setImgData} />\n            }\n        </BaseDialog>\n    )\n}\n\nexport const ImageDialog = (props) => {\n    const plotType = useAppSelector(selectPlotType);\n    const area = useAppSelector(selectArea);\n    const year = useAppSelector(selectYear);\n    const items = [];  // TODO: Needs to provide the same items provided to the specific plot type\n    return <DumbImageDialog {...props}\n                            plotType={plotType}\n                            area={area}\n                            year={year}\n                            items={items} />\n};\n\nexport const BasicShareDialog = ({isOpen, setOpen, title='Statistipedia Explore'}) => {\n    const url = window.location.href;\n    return (\n        <BaseDialog isOpen={isOpen} setOpen={setOpen}>\n            <>\n                <div className='dialog-header'>\n                    <div className='dialog-title'>Share</div>\n                </div>\n                <DialogContent className='dialog-content'>\n                    <div className='social-btns'>\n                        <FacebookShareButton\n                            url={url}\n                            quote={title}\n                        >\n                            <FacebookIcon round />\n                        </FacebookShareButton>\n                        <TwitterShareButton\n                            url={url}\n                            title={title}\n                        >\n                            <TwitterIcon round />\n                        </TwitterShareButton>\n                        <RedditShareButton\n                            url={url}\n                            title={title}\n                        >\n                            <RedditIcon round />\n                        </RedditShareButton>\n                        <LinkedinShareButton url={url}>\n                            <LinkedinIcon round />\n                        </LinkedinShareButton>\n                    </div>\n                    <div style={{display: 'flex'}}>\n                        <TextField value={url} />\n                        <CopyToClipboard onCopy={() => {}} text={url}>\n                            <IconButton aria-label=\"copy\"\n                                        className='copy-btn'\n                                        title='Copy to clipboard'>\n                                <FileCopyOutlinedIcon />\n                            </IconButton>\n                        </CopyToClipboard>\n                    </div>\n                </DialogContent>\n                <DialogActions className='dialog-actions'>\n                    <Button onClick={() => window.history.back()}>Close</Button>\n                </DialogActions>\n            </>\n        </BaseDialog>\n    );\n};\n\nexport const SharePlotDialog  = ({isOpen, setOpen, compares, xAxisLabel, yAxisLabel}) => {\n    const plotType = useAppSelector(selectPlotType);\n    const area = useAppSelector(selectArea);\n    const year = useAppSelector(selectYear);\n    const plotTitle = createPlotTitle(plotType, area, year, compares, xAxisLabel, yAxisLabel);\n    return <BasicShareDialog isOpen={isOpen} setOpen={setOpen} title={plotTitle} />;\n};\n","import React from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { setYear, selectYear } from './yearSlice';\nimport {Box, Slider, IconButton} from \"@mui/material\";\nimport PlayIcon from '@mui/icons-material/PlayArrow';\nimport {styled} from \"@mui/system\";\nimport {selectPlotType} from \"../plotType/plotTypeSlice\";\nimport {last} from 'ramda';\nimport './YearSlider.scss';\nimport {selectYears} from \"../data/dataSlice\";\nimport { ANIMATION_DURATION } from '../../dashboard/config';\n\nconst PrettoSlider = styled(Slider)({\n    color: '#318Cf6',\n    height: 8,\n    '& .MuiSlider-track': {\n        border: 'none',\n    },\n    '& .MuiSlider-thumb': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: 'inherit',\n        },\n        '&:before': {\n            display: 'none',\n        },\n    },\n    '& .MuiSlider-valueLabel': {\n        lineHeight: 1.2,\n        fontSize: 12,\n        background: 'unset',\n        padding: 0,\n        width: 32,\n        height: 32,\n        borderRadius: '50% 50% 50% 0',\n        backgroundColor: '#318Cf6',\n        transformOrigin: 'bottom left',\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n        '&:before': { display: 'none' },\n        '&.MuiSlider-valueLabelOpen': {\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',\n        },\n        '& > *': {\n            transform: 'rotate(45deg)',\n        },\n    },\n    '& .Mui-disabled .MuiSlider-valueLabel': {\n        display: 'none'\n    }\n});\n\nclass PlayButton extends React.Component<{year: number, years: number[], disabled: boolean, setYear: (y: number) => void}, {running: boolean}> {\n    timer;\n\n    constructor(props) {\n        super(props);\n        this.state = {running: false};\n    }\n\n    advanceYear = () => {\n        const {year, years, setYear} = this.props;\n        const yearsRemaining = years.filter(y => y > year);\n        setYear(yearsRemaining[0]);\n        if (yearsRemaining.length > 1) {\n            setTimeout(this.advanceYear, ANIMATION_DURATION);\n        } else {\n            this.setState({running: false});\n        }\n    };\n\n    startSlideshow = () => {\n        this.setState({running: true});\n        const {years, setYear} = this.props;\n        setYear(years[0]);\n        setTimeout(this.advanceYear, ANIMATION_DURATION * 1.5);\n    };\n\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    render() {\n        return (\n            <IconButton \n                className='play' disabled={this.props.disabled || this.state.running}\n                onClick={() => this.startSlideshow()}\n            >\n            <PlayIcon />\n        </IconButton>\n        )\n    }\n}\n\nconst YearSlider = () => {\n    const year = useAppSelector(selectYear);\n    const plotType = useAppSelector(selectPlotType);\n    const years = useAppSelector(selectYears);\n    const dispatch = useAppDispatch();\n\n    return plotType && years && year && (\n        <div className='timeline'>\n            <PlayButton \n                disabled={plotType.name === 'line'}\n                year={year}\n                years={years}\n                setYear={(y: number) => dispatch(setYear(y))}\n            />\n            <Box sx={{\n                flex: '1 1'\n            }}>\n                <PrettoSlider\n                    className='custom-slider'\n                    value={year}\n                    min={years[0]}\n                    max={last(years)}\n                    step={1}\n                    disabled={plotType.name === 'line'}\n                    valueLabelDisplay=\"on\"\n                    onChange={(event, y: number) => {\n                        if (year !== y) {\n                            dispatch(setYear(y))\n                        }\n                    }}\n                    sx={{\n                        paddingTop: '20px',\n                        '& .MuiSlider-markLabel': {\n                            top: '40px'\n                        }\n                    }}\n                />\n            </Box>\n        </div>\n    );\n}\n\nexport default YearSlider;\n","import PlaceIcon from \"@mui/icons-material/Place\";\nimport {ReactComponent as CompareIconSrc} from \"./icons/Compare.svg\";\nimport {ReactComponent as CompareDiffIconSrc} from \"./icons/CompareDiff.svg\";\nimport TagIcon from \"@mui/icons-material/Tag\";\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TimelapseIcon from '@mui/icons-material/Timelapse';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport {SvgIcon} from \"@mui/material\";\nimport BubbleChartIcon from \"@mui/icons-material/BubbleChart\";\nimport DoDisturbIcon from '@mui/icons-material/DoDisturb';\nimport TimelineIcon from \"@mui/icons-material/Timeline\";\nimport BarChartIcon from \"@mui/icons-material/BarChart\";\nimport RoomIcon from \"@mui/icons-material/Room\";\n\nconst makeIcon = (iconSrc) => () => (\n    <SvgIcon component={iconSrc} viewBox=\"0 0 256 256\" />\n);\n\nexport const FIELD_TYPE_ICONS_MAP: {[name: string]: any} = {\n    'geo': PlaceIcon,\n    'numeric': makeIcon(CompareIconSrc),\n    'nominal': makeIcon(CompareIconSrc),\n    'ordinal': makeIcon(CompareIconSrc),\n    'percent': TimelapseIcon,\n    'dollars': PaidIcon,\n    'minutes': AccessTimeFilledIcon,\n    'hours': AccessTimeFilledIcon,\n    'years': CalendarMonthIcon,\n    'none': DoDisturbIcon,\n    'default': TagIcon\n};\n\nexport const PLOT_TYPE_ICONS_MAP: {[name: string]: typeof SvgIcon} = {\n    'bubble': BubbleChartIcon,\n    'line': TimelineIcon,\n    'bar': BarChartIcon,\n    'map': RoomIcon\n};\n","import {ToggleButton, ToggleButtonGroup} from \"@mui/material\";\nimport {PLOT_TYPES} from \"../../dashboard/config\";\nimport React from \"react\";\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\nimport {selectPlotType, setPlotType} from \"./plotTypeSlice\";\nimport {PLOT_TYPE_ICONS_MAP} from \"../../dashboard/icons\";\n\n\nconst PlotTypeSelect = () => {\n    const plotType = useAppSelector(selectPlotType);\n    const dispatch = useAppDispatch();\n\n    const changePlotType = (event, name) => {\n        dispatch(setPlotType(name));\n    }\n\n    return (\n        <div className='plot-type'>\n            <ToggleButtonGroup size='small'\n                               value={plotType.name}\n                               exclusive\n                               onChange={changePlotType}>\n                {PLOT_TYPES.map((pt) => {\n                    const Icon = PLOT_TYPE_ICONS_MAP[pt.name];\n                    return (\n                        <ToggleButton key={pt.name} value={pt.name}>\n                            {<Icon />}\n                        </ToggleButton>\n                    );\n                })}\n            </ToggleButtonGroup>\n        </div>\n    );\n};\n\nexport default PlotTypeSelect;\n","import PlotTypeSelect from \"../plotType/PlotTypeSelect\";\nimport {\n    Autocomplete, Button,\n    Divider, Drawer,\n    FormControl, Input, InputAdornment,\n    InputLabel, List, ListItem, ListItemText, Menu, MenuItem, MenuList,\n    NativeSelect, Select, ListItemIcon,\n    TextField, IconButton\n} from \"@mui/material\";\nimport React, {ChangeEvent, useEffect} from \"react\";\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\nimport {setControls} from \"./controlsSlice\";\nimport {selectPlotType} from \"../plotType/plotTypeSlice\";\nimport {\n    selectAreas,\n    selectAllCompareByFieldDetails,\n    selectNumericFields, selectLevels\n} from \"../data/dataSlice\";\nimport {selectControlFields} from \"../../dashboard/selectors\";\nimport {allValuesNotNull, capitalize} from \"../../dashboard/utils/misc\";\nimport {groupBy, curry, zipObj} from \"ramda\";\nimport {\n    BOTTOM_DRAWER_CORNER,\n    BOTTOM_DRAWER_HEIGHT, CompareByField,\n    DataField\n} from \"../../dashboard/config\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport {useTheme} from \"@mui/system\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport './Controls.scss';\nimport {FIELD_TYPE_ICONS_MAP} from \"../../dashboard/icons\";\nimport Cached from \"@mui/icons-material/Cached\";\n\ntype FieldOption = DataField & {\n    disabled: boolean\n}\n\ntype FieldGroup = {\n    name: string,\n    fields: FieldOption[]\n};\n\nconst groupFields = (fields: any[]) : FieldGroup[] => {\n    const gs = groupBy(f => f.group, fields);\n    return Object.keys(gs).map(k => ({ name: k, fields: gs[k] }));\n};\n\nconst DrawerFieldSelect = ({children, title, open, setOpen}) => {\n    useEffect(() => {\n        document.body.style.position = open ? 'fixed' : 'initial';\n    }, [open]);\n\n    return (\n        <Drawer\n            anchor='bottom'\n            PaperProps={{\n                style: {\n                    height: BOTTOM_DRAWER_HEIGHT,\n                    borderRadius: `${BOTTOM_DRAWER_CORNER}px ${BOTTOM_DRAWER_CORNER}px 0 0`\n                }\n            }}\n            ModalProps={{\n                keepMounted: true\n            }}\n            open={open}\n            onClose={() => setOpen(false)}\n        >\n            <div>\n                <div className='select-drawer-bar'>\n                    <div className='title'>{title}</div>\n                    <div className='actions'>\n                        <Button onClick={() => setOpen(false)}>Close</Button>\n                    </div>\n                </div>\n                <div className='select-drawer-content'>\n                    {children}\n                </div>\n            </div>\n        </Drawer>\n    );\n};\n\nconst MenuFieldSelect = ({children, anchorEl, setAnchorEl}) => (\n    <Menu\n        variant=\"menu\"\n        anchorEl={anchorEl}\n        open={anchorEl != null}\n        onClose={() => setAnchorEl(null)}\n        MenuListProps={{\n            role: 'listbox',\n        }}\n    >\n        {children}\n    </Menu>\n);\n\nconst FieldSelect = ({children, title, anchorEl, setAnchorEl}) => {\n    const theme = useTheme();\n    const useDrawer = useMediaQuery(theme.breakpoints.down('md'));\n    return useDrawer ? (\n        <DrawerFieldSelect title={title}\n                           open={anchorEl != null}\n                           setOpen={() => setAnchorEl(null)}>\n            {children}\n        </DrawerFieldSelect>\n    ) : (\n        <MenuFieldSelect anchorEl={anchorEl}\n                         setAnchorEl={setAnchorEl}>\n            {children}\n        </MenuFieldSelect>\n    )\n};\n\nconst BaseFieldSelect = ({field, options, onChange, disabled=false, label,\n                             value, className=undefined} :\n                             {field: string, options: FieldGroup[], onChange,\n                                 disabled?: boolean, label: string,\n                                 value: string, className?: string}) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleClickListItem = (event) => {\n        !disabled && setAnchorEl(event.currentTarget);\n    };\n    return (\n        <div>\n            <FormControl className=\"form-control\" disabled={disabled}>\n                <InputLabel variant=\"standard\" htmlFor={`field-${field}`}>\n                    {label}\n                </InputLabel>\n                <div className={`${disabled ? 'Mui-disabled ': ''}${className ? className + ' ' : ''}custom-select MuiInput-root MuiInput-underline MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiSelect-root`}\n                     onClick={handleClickListItem}>\n                    <div role=\"button\" aria-expanded=\"false\"\n                         aria-haspopup=\"listbox\" aria-labelledby=\"compare-by-1\"\n                         id=\"compare-by-1\"\n                         className=\"MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input\">\n                        {value}\n                    </div>\n                    <ArrowDropDownIcon className='adornment' />\n                    <Input id={`field-${field}`}\n                           className=\"MuiSelect-nativeInput css-yf8vq0-MuiSelect-nativeInput\"\n                           type='hidden'\n                           value={value}\n                           aria-hidden=\"true\"\n                    />\n                </div>\n            </FormControl>\n            <FieldSelect title={label} anchorEl={anchorEl} setAnchorEl={setAnchorEl}>\n                {options.flatMap((g, i) => [\n                    i > 0 ? <Divider key={`${g.name}_divider`} /> : null,\n                    <MenuItem disabled={true}\n                              key={`${g.name}_header`}\n                              className='menu-group-header'>\n                        {g.name}\n                    </MenuItem>,\n                    ...g.fields.map(f => {\n                        const Icon = FIELD_TYPE_ICONS_MAP[f.type] || FIELD_TYPE_ICONS_MAP.default;\n                        return (\n                            <MenuItem key={f.id}\n                                      value={f.id}\n                                      selected={f.name === value}\n                                      disabled={f.disabled}\n                                      onClick={() => onChange({[field]: f.id})}>\n                                <ListItemIcon>\n                                    <Icon/>\n                                </ListItemIcon>\n                                <ListItemText primary={f.name}\n                                              secondary={f.description}/>\n                            </MenuItem>\n                        )\n                    })\n                ])}\n            </FieldSelect>\n        </div>\n    );\n};\n\nconst Controls = () => {\n    const plotType = useAppSelector(selectPlotType);\n    const controls = useAppSelector(selectControlFields);\n    const controlsIsReady = allValuesNotNull(controls);\n    const numericFields = useAppSelector(selectNumericFields);\n    const compareByFields = useAppSelector(selectAllCompareByFieldDetails);\n    const areas = useAppSelector(selectAreas);\n    const levels = useAppSelector(selectLevels);\n    const dispatch = useAppDispatch();\n\n    const disableUsedCompares = (fields: CompareByField[]) : CompareByField[] => {\n        const used = controls.compare.map(c => c.id);\n        return fields.map(f => ({\n            ...f,\n            disabled: used.includes(f.id)\n        }));\n    };\n\n    const addRecents = (fields: CompareByField[]) : CompareByField[] => {\n        const none = {\n            id: 'none',\n            type: 'none',\n            name: 'None',\n            description: 'Clear field',\n            group: 'Recently used',\n            values: {}\n        };\n        return [none, ...fields];\n    }\n\n    const numericFieldGroups = groupFields(numericFields);\n    const compareByGroups = groupFields(addRecents(disableUsedCompares(compareByFields)));\n\n    const updateState = (newState: {[key: string]: any}) => {\n        return dispatch(setControls(zipObj(Object.keys(newState), Object.values(newState))));\n    };\n\n    const updateCompare = (i: number, newState: {[key: string]: any}) => {\n        const newNewState = newState;\n        const k = Object.keys(newState)[0];\n        const v = Object.values(newState)[0];\n        if (v === 'none') {\n            switch (i) {\n                case 0: newNewState[k] = controls.compare.length === 2 ?\n                    [controls.compare[1].id] : []; break;\n                case 1: newNewState[k] = [controls.compare[0].id]; break;\n                default: throw new Error('Unexpected compare index: ' + i)\n            }\n        } else {\n            switch (i) {\n                case 0: newNewState[k] = controls.compare.length === 2 ?\n                    [v, controls.compare[1].id] : [v]; break;\n                case 1: newNewState[k] = [controls.compare[0].id, v]; break;\n                default: throw new Error('Unexpected compare index: ' + i)\n            }\n        }\n        return updateState(newNewState);\n    };\n\n    const switchCompares = () => {\n        const newState = {\n            'compare': [controls.compare[1].id, controls.compare[0].id]\n        };\n        return(updateState(newState));\n    };\n\n    const CompareByFieldSelect = ({i}: {i: number}) => (\n        <BaseFieldSelect field={`compare`}\n                         className='compare-by'\n                         options={compareByGroups}\n                         onChange={curry(updateCompare)(i)}\n                         disabled={plotType.name === 'map' || i > controls.compare.length}\n                         label='Compare by'\n                         value={controls.compare[i]?.name || ' '}\n        />\n    );\n\n    const FieldSelect = ({field} : {field: string}) => (\n        <BaseFieldSelect field={field}\n                         options={numericFieldGroups}\n                         onChange={updateState}\n                         disabled={!plotType.fields[field]}\n                         label={plotType.fields[field] || `${field.toUpperCase()}-Axis`}\n                         value={controls[field].name}\n        />\n    );\n\n    const BasicSelect =\n        ({field, options, disabled=false,\n             onChange=(e) => updateState({[field]: e.target.value})} :\n             {field: string, options: {allIds: string[], byId}, disabled?: boolean,\n             onChange?: (e: ChangeEvent<HTMLSelectElement>) => void}) => (\n        <FormControl className=\"form-control\" disabled={disabled}>\n            <InputLabel variant=\"standard\" htmlFor={`field-${field}`}>\n                {capitalize(field)}\n            </InputLabel>\n            <NativeSelect id={field}\n                          className='custom-select'\n                          onChange={onChange}\n                          value={controls[field].id}>\n                {options.allIds.map(id => (\n                    <option key={id} value={id}>{options.byId[id].name}</option>\n                ))}\n            </NativeSelect>\n        </FormControl>\n    )\n\n    // Not working\n    const AutocompleteSelect =\n        ({field, options, disabled=false} :\n             {field: string, options: {allIds: string[], byId}, disabled?: boolean}) => (\n        <Autocomplete\n            freeSolo\n            disabled={disabled}\n            id={field}\n            className=\"form-control\"\n            options={options.allIds}\n            value={controls[field].id}\n            getOptionLabel={(option) => options.byId[option].name}\n            renderInput={(params) =>\n                <TextField {...params} variant=\"standard\" label={capitalize(field)} />}\n        />\n    )\n\n    return controlsIsReady && areas.allIds.length > 0 && (\n        <div className='controls'>\n            <PlotTypeSelect />\n            <BasicSelect field='area'\n                         options={areas}\n                         onChange={(e) => {\n                             const v = e.target.value;\n                             updateState({\n                                 'area': v,\n                                 'level': v === 'us' ? 'state' : 'county'\n                             });\n                         }} />\n            <BasicSelect field='level' options={levels} disabled={true} />\n            <div className='compare-by-fieldset'>\n                <div className='fields'>\n                    <CompareByFieldSelect i={0} />\n                    <CompareByFieldSelect i={1} />\n                </div>\n\n                <div className='switch'>\n                    <IconButton size='small'\n                                disabled={plotType.name === 'map' || controls.compare.length < 2}\n                                onClick={switchCompares}>\n                        <Cached />\n                    </IconButton>\n                </div>\n            </div>\n            <FieldSelect field='x' />\n            <FieldSelect field='y' />\n            <FieldSelect field='z' />\n        </div>\n    );\n};\n\nexport default Controls;\n","import React from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\nimport {\n    clearDataValues,\n    selectCompareByFields,\n    setData\n} from \"./dataSlice\";\nimport {DATA_DIR, DataValue, DerivedDataValueSet} from \"../../dashboard/config\";\nimport {groupBy, difference} from 'ramda';\nimport axios from \"axios\";\nimport {flattenArrayOfObjects} from \"../../dashboard/utils/misc\";\nimport {\n    selectControlFields,\n    selectControlFieldValues\n} from \"../../dashboard/selectors\";\nimport {selectControlsLoaded} from \"../controls/controlsSlice\";\nimport {selectPlotType} from \"../plotType/plotTypeSlice\";\n\ntype ChunkParams = {\n    level: string\n    area: string\n}\n\ntype ValueChunkParams = ChunkParams & {\n    compare: string[]\n    feature: string\n}\n\ntype TopologyChunkParams = {\n\n}\n\ntype ChunkToFetch<P> = {\n    url: string,\n    params: P\n}\n\ntype FetchedChunk<P> = {\n    data: DataValue[],\n    params: P\n}\n\ntype FlattenedValueChunk = {\n    data: DataValue,\n    params: ValueChunkParams\n}\n\nexport const computeValueChunk = (\n    area: string,\n    level: string,\n    feature: string,\n    compare: string[],\n    plotType: string\n) : ChunkToFetch<ValueChunkParams> => {\n    const c = compare.length === 0 || plotType === 'map' ? 'all' : compare.join('_');\n    return {\n        url: `/pums/${area}/${level}/${feature}/${c}.json`,\n        params: {\n            area,\n            level,\n            compare,\n            feature,\n        }\n    };\n};\n\nexport const computeTopologyChunk = (\n    area: string,\n    level: string\n) : ChunkToFetch<TopologyChunkParams> => {\n    return {\n        url: `/topologies/${area}.json`,\n        params: {\n            area,\n            level\n        }\n    };\n}\n\nconst sortCompares = (compareFields, compares) => {\n    return compareFields.allIds.filter(c => compares.includes(c));\n};\n\nconst DataManager = () => {\n    const plotType = useAppSelector(selectPlotType);\n    const controls = useAppSelector(selectControlFieldValues);\n    const compareFields = useAppSelector(selectCompareByFields);\n    const controlsLoaded = useAppSelector(selectControlsLoaded);\n    const dispatch = useAppDispatch();\n\n    React.useEffect(() => {\n        const _computeChunks = () : ChunkToFetch<ValueChunkParams|TopologyChunkParams>[] => {\n            const compares = sortCompares(compareFields, controls.compare);\n            const {x, y, z} = controls;\n            return [\n                ...[x, y, z].map(f =>\n                    computeValueChunk(\n                        controls.area, controls.level, f, compares, plotType.name)),\n                computeTopologyChunk(controls.area, controls.level)\n            ];\n        }\n\n        const isValueChunk = (c: FetchedChunk<ValueChunkParams|TopologyChunkParams>) : boolean => {\n            // @ts-ignore\n            return !!c.params.compare;\n        }\n\n        const groupByFn = (v: FlattenedValueChunk) => {\n            const compareValues = v.params.compare.map(c => v.data[c]);\n            return v.data.geoid + \"_\" + v.data.year + \"_\" + compareValues.join(\"_\");\n        }\n\n        const mergeFeatures = (vs: FlattenedValueChunk[]) : DerivedDataValueSet => {\n            const featureSet = [...new Set(vs.flatMap(v => v.params.feature))];\n            const allKeys = [...new Set(vs.flatMap(v => Object.keys(v.data)))];\n            const nonFeatureSet = difference(allKeys, featureSet);\n            const output = {};\n            vs.forEach(v => {\n                featureSet.forEach(feature => {\n                    const featureValue = v.data[feature];\n                    if (featureValue != null) {\n                        output[feature] = featureValue\n                    }\n                });\n            });\n            nonFeatureSet.forEach(key => {      // All non-feature values\n                output[key] = vs[0].data[key];  // should be the same\n            });\n            return output;\n        };\n\n        const processValues = (cs: FetchedChunk<ValueChunkParams>[]) : DerivedDataValueSet[] => {\n            const vs: FlattenedValueChunk[] = cs.flatMap(\n                c => c.data.map(d => ({data: d, params: c.params})));\n            const groups: FlattenedValueChunk[][] = Object.values(groupBy(groupByFn, vs));\n            return groups.map(mergeFeatures);\n        };\n\n        const onChunksFetched = (cs: FetchedChunk<ValueChunkParams|TopologyChunkParams>[]): void => {\n            const valueDataArray = cs.filter(isValueChunk) as FetchedChunk<ValueChunkParams>[];\n            const valueData = processValues(valueDataArray);\n            const otherData = cs.filter(c => !isValueChunk(c)).map(c => c.data);\n            const data = { values: valueData, ...flattenArrayOfObjects(otherData) };\n            dispatch(setData(data));\n        };\n\n        const _fetchChunks = (cs: ChunkToFetch<ValueChunkParams|TopologyChunkParams>[]) => {\n            Promise.all(cs.map(c => axios.get(DATA_DIR + c.url))).then((responses) => {\n                const fcs = responses.map((r, i) =>\n                    ({data: r.data, params: cs[i].params}));\n                onChunksFetched(fcs);\n            });\n        };\n\n        const update = () => {\n            return (dispatch, getState) => {\n                dispatch(clearDataValues());\n                _fetchChunks(_computeChunks());\n            }\n        };\n\n        if (controlsLoaded)\n            dispatch(update());\n    }, [dispatch, plotType, controls, controlsLoaded]);  // data left out of deps to prevent infinite loop\n\n    return null;\n}\n\nexport default DataManager;\n","import React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport {useAppDispatch, useAppSelector} from \"../app/hooks\";\nimport {selectControlFields, selectControlFieldValues} from \"./selectors\";\nimport {selectYear, setYear} from \"../features/year/yearSlice\";\nimport {map, filter,} from 'ramda';\nimport {selectPlotType, setPlotType} from \"../features/plotType/plotTypeSlice\";\nimport {setControls, setLoaded} from \"../features/controls/controlsSlice\";\nimport {setSearchPart} from \"./utils/url\";\nconst queryString = require('query-string');\n\nconst Url = () => {\n    const controls = useAppSelector(selectControlFieldValues);\n    const storedYear = useAppSelector(selectYear);\n    const storedPlotType = useAppSelector(selectPlotType);\n    const dispatch = useAppDispatch();\n    const {search} = useLocation();\n\n    // Don't think we need the thunk stuff anymore, but just leave it for now.\n\n    const updateUrl = () => {\n        return (dispatch, getState) => {\n            const state = getState();\n            const controls = selectControlFields(state);\n            const storedYear = selectYear(state);\n            const storedPlotType = selectPlotType(state);\n            if (state.controls.loaded) {\n                const allParams = {\n                    plot: storedPlotType.name,\n                    ...map(f => f ? f.id : null, controls),\n                    compare: controls.compare.map(c => c.id),\n                    year: storedYear\n                };\n                const params = filter(p => !!p, allParams);\n                const newS = queryString.stringify(params, {arrayFormat: 'bracket'});\n                if (newS !== search) {\n                    setSearchPart(newS);\n                    // TODO: Should we really clobber all the history?\n                    // window.history.replaceState({}, null, '?' + s);\n                }\n            }\n        }\n    }\n\n    const configUpdated = () => {\n        const { x, y, z, area, level, compare, plot, year } =\n            queryString.parse(search, {arrayFormat: 'bracket'});\n        const nonNullControls = filter(v => !!v, {x, y, z, area, level, compare});\n        dispatch(setControls(nonNullControls));\n        if (!!plot)\n            dispatch(setPlotType(plot));\n        if (!!year)\n            dispatch(setYear(parseInt(year)));\n    }\n\n    const loadState = () => {\n        return (dispatch, getState) => {\n            dispatch(updateUrl());\n            dispatch(setLoaded());\n        }\n    }\n\n    React.useEffect(() => {  // Only first load\n        dispatch(loadState());\n    }, []);\n\n    React.useEffect(() => {   // On URL change\n        configUpdated();\n    }, [search]);\n\n    React.useEffect(() => {   // On controls change\n        dispatch(updateUrl());\n    }, [dispatch, controls, storedYear, storedPlotType]);\n\n    return null\n};\n\nexport default Url\n","import {FC} from 'react';\nimport './Legend.scss';\nimport {useAppSelector} from \"../app/hooks\";\nimport {\n    selectColorPalette,\n    selectCurrentCompareDetails,\n    selectLegendPosition,\n} from \"./selectors\";\nimport {ColorPalette} from \"./utils/colors\";\nimport {CompareByField, LegendCorner, LegendPosition} from \"./config\";\nimport Tooltip from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport {tooltipClasses} from \"@mui/material\";\n\ntype LegendComponentProps = {\n    compares: CompareByField[]\n    colorPalette: ColorPalette\n}\n\nconst bgAlphaHex = 'CC';\n\nconst OrdinalStrip = ({fromColor, toColor, label=null}) => {\n    return (\n        <>\n            <div className='strip'\n                 style={{\n                     backgroundImage: `linear-gradient(to right, ${fromColor + bgAlphaHex}, ${toColor + bgAlphaHex})`\n                 }}>\n                {label}\n            </div>\n        </>\n    )\n}\n\nconst OrdinalLabels = ({start, end}) => (\n    <div className='labels strip'>\n        <div className='label' style={{ top: 0, left: 0 }}>{start}</div>\n        <div className='label' style={{ top: 0, right: 0 }}>{end}</div>\n    </div>\n)\n\nconst OrdinalLegend = ({colorPalette}: LegendComponentProps) => {\n    return (\n        <div className='ordinal'>\n            <OrdinalLabels start={colorPalette.labels.cols[0]}\n                           end={colorPalette.labels.cols[1]} />\n            <OrdinalStrip fromColor={colorPalette.colors.byRowAndCol[0][0]}\n                          toColor={colorPalette.colors.byRowAndCol[0][1]}\n            />\n        </div>\n    );\n};\n\nconst NominalLegend = ({colorPalette}: LegendComponentProps) => {\n    // const cols = [\n    //     {name: 'Wh', hue: 200},\n    //     {name: 'Bl', hue: 340},\n    //     {name: 'Hs', hue: 150},\n    //     {name: 'As', hue: 40},\n    // ];\n\n    return (\n        <div className='nominal'>\n            {colorPalette.colors.byRowAndCol.map((row, r) =>\n                <div key={'row-' + r}\n                     className='strip'\n                     style={{ backgroundColor: row[0] + bgAlphaHex }}>\n                    {colorPalette.labels.rows[r]}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst OrdinalByNominalLegend = ({colorPalette}: LegendComponentProps) => (\n    <div className='ordinal'>\n        <OrdinalLabels start={colorPalette.labels.cols[0]}\n                       end={colorPalette.labels.cols[1]} />\n        {colorPalette.colors.byRowAndCol.map((colorRow, r) => (\n            <OrdinalStrip key={'row-' + r}\n                          fromColor={colorRow[0]}\n                          toColor={colorRow[1]}\n                          label={colorPalette.labels.rows[r]}\n            />\n        ))}\n    </div>\n);\n\nconst NominalByNominalLegend = ({colorPalette}: LegendComponentProps) => (\n    <table className='nominal-grid' cellPadding={0} cellSpacing={0}>\n        <tbody>\n            <tr>\n                <th />\n                {colorPalette.labels.cols.map((col, c) => (\n                    <th key={'col-header-' + c} className='col-header'>\n                        {col}\n                    </th>\n                ))}\n            </tr>\n            {colorPalette.colors.byRowAndCol.map((colorRow, r) => (\n                <tr key={'row-' + r} >\n                    <th className='row-header'>\n                        {colorPalette.labels.rows[r]}\n                    </th>\n                    {colorRow.map((colorCell, c) => (\n                        <Tooltip disableFocusListener\n                                 key={`cell-${c}-${r}`}\n                                 title={\n                                     colorPalette.fullNames.rows[r] + ', ' +\n                                     colorPalette.fullNames.cols[c]}>\n                            <td className='cell'\n                                style={{\n                                    backgroundColor: colorCell + bgAlphaHex\n                                }} />\n                        </Tooltip>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nconst OrdinalByOrdinalLegend = ({colorPalette}: LegendComponentProps) => {\n    const cs = colorPalette.colors.byRowAndCol;\n    const ls = colorPalette.labels;\n    return (\n        <div  className='ordinal'>\n            <div className='layer'\n                 style={{\n                     backgroundImage: `linear-gradient(to right, ${cs[0][0] + bgAlphaHex}, ${cs[0][1] + bgAlphaHex})`,\n                }}\n            >\n            </div>\n            <div className='layer'\n                 style={{\n                     backgroundImage: `linear-gradient(to right, ${cs[1][0] + bgAlphaHex}, ${cs[1][1] + bgAlphaHex}`,\n                     WebkitMask: 'linear-gradient(to bottom, #0000, #00000080 50%, #000D 80%, #000 100%)',\n                     mask: 'linear-gradient(to bottom, #0000, #00000080 50%, #000D 80%, #000 100%)',\n                 }}\n            >\n            </div>\n            <div className='label' style={{ top: 4, left: 16}}>${ls.cols[0]}</div>\n            <div className='label' style={{ top: 4, right: 10}}>${ls.cols[1]}</div>\n            <div className='label' style={{ top: 16, left: 6 }}>${ls.rows[0]}</div>\n            <div className='label' style={{ bottom: 10, left: 6 }}>${ls.rows[1]}</div>\n        </div>\n    );\n};\n\nconst getLegendComponent = (compares: CompareByField[]) : FC<LegendComponentProps> => {\n    const types = compares.map(c => c.type);\n    switch (compares.length) {\n        case 0:\n            return null;\n        case 1:\n            return types[0] === 'nominal' ? NominalLegend : OrdinalLegend;\n        case 2:\n            if (types[0] === 'nominal') {\n                return types[1] === 'nominal' ? NominalByNominalLegend : OrdinalByNominalLegend;\n            } else {\n                return types[1] === 'ordinal' ? OrdinalByOrdinalLegend : OrdinalByNominalLegend;\n            }\n        default:\n            throw new Error(`Has ${compares.length} compares. Must be 0-2.`)\n    }\n};\n\nconst Legend = () => {\n    const colorPalette = useAppSelector(selectColorPalette);\n    const compares = useAppSelector(selectCurrentCompareDetails);\n    const position = useAppSelector(selectLegendPosition);\n    const LegendComponent = getLegendComponent(compares);\n    if (!position || compares.length === 0) {\n        return null;\n    }\n    return(\n        <div className={`legend ${position.corner}`}>\n            <LegendComponent colorPalette={colorPalette} compares={compares} />\n        </div>\n    );\n}\n\nexport default Legend;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n    AppBar, Collapse,\n    Divider, Drawer,\n    Hidden, IconButton,\n    List,\n    ListItemButton, ListItemIcon,\n    ListItemText, Toolbar, Typography\n} from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport DataIcon from \"@mui/icons-material/Storage\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport './Nav.scss';\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectPlotPresets} from \"./selectors\";\n\nconst SideMenuItem = ({text, icon, children=null}) => {\n    const [open, setOpen] = React.useState(false);\n    return (\n        <>\n            <ListItemButton onClick={() => setOpen(!open)}>\n                <ListItemIcon className='menu-item-icon'>{icon}</ListItemIcon>\n                <ListItemText primary={text} />\n                {children && (open ? <ExpandLess /> : <ExpandMore />)}\n            </ListItemButton>\n            {children && (\n                <Collapse in={open} timeout=\"auto\" unmountOnExit className='nested-menu'>\n                    {children}\n                </Collapse>\n            )}\n        </>\n    );\n};\n\nconst Nav = ({darkMode, ShareDialog, children=null}) => {\n    const plotPresets = useAppSelector(selectPlotPresets);\n    const [shareOpen, setShareOpen] = React.useState(false);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const drawer = (\n        <div className='side-menu'>\n            <Divider />\n            <List>\n                <a href='/'>\n                    <SideMenuItem text='Statistpedia' icon={<HomeIcon />} />\n                </a>\n                {/*<SideMenuItem text='Datasets' icon={<DataIcon />} />*/}\n                <SideMenuItem text='Presets' icon={<DataIcon />}>\n                    <List>\n                        { plotPresets.map((p) => (\n                            <Link to={'/' + p.url} key={p.title}>\n                                <ListItemButton>\n                                    <ListItemText>{p.title}</ListItemText>\n                                </ListItemButton>\n                            </Link>\n                        ))}\n                    </List>\n                </SideMenuItem>\n            </List>\n            <Divider />\n        </div>\n    );\n    return (\n        <>\n            <nav>\n                <Hidden xlUp>\n                    <Drawer\n                        variant=\"temporary\"\n                        open={drawerOpen}\n                        onClose={() => setDrawerOpen(false)}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xlDown>\n                    <Drawer\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <AppBar className='top-bar'\n                    position=\"static\"\n                    elevation={darkMode.value ? 0 : 1}>\n                <Toolbar variant=\"dense\">\n                    <IconButton edge=\"start\"\n                                sx={{\n                                    marginRight: '0.5em',\n                                    display: { xs: 'inline-flex', xl: 'none' }\n                                }}\n                                onClick={() => setDrawerOpen(!drawerOpen)}\n                                color=\"inherit\"\n                                aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        id='site-title'\n                        variant=\"h1\"\n                        sx={{\n                            display: ['none', 'block']\n                        }}\n                    >\n                        <Link to='/' style={{\n                            color: 'inherit',\n                            textDecoration: 'none'\n                        }}>\n                            Statistipedia <sub><small><i>EXPLORE</i></small></sub>\n                        </Link>\n                    </Typography>\n                    <Typography\n                        id='site-title'\n                        variant=\"h1\"\n                        sx={{\n                            display: ['block', 'none']\n                        }}\n                    >\n                        <Link to='/' style={{\n                            color: 'inherit',\n                            textDecoration: 'none'\n                        }}>\n                            S<sub><small><i>E</i></small></sub>\n                        </Link>\n                    </Typography>\n                    <div className=\"grow\" />\n                    {children}\n                    <IconButton className='menu-btn'\n                                onClick={() => setShareOpen(true)}\n                                color=\"inherit\">\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton edge=\"end\"\n                                className='menu-btn'\n                                onClick={darkMode.toggle}\n                                color=\"inherit\">\n                        {darkMode.value ? <LightModeIcon /> : <DarkModeIcon />}\n                    </IconButton>\n                    {shareOpen && <ShareDialog isOpen={shareOpen} setOpen={setShareOpen} />}\n                </Toolbar>\n            </AppBar>\n\n        </>\n    );\n};\n\nexport default Nav;\n","var _style, _g, _path, _circle, _path2, _circle2, _path3, _circle3, _path4, _circle4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg8\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: 0,\n    y: 0,\n    viewBox: \"0 0 3492.7 3492.7\",\n    style: {\n      enableBackground: \"new 0 0 3492.7 3492.7\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \".st0{fill:#fad214}.st1{fill:none;stroke:#000;stroke-width:72;stroke-miterlimit:10}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"layer1\",\n    transform: \"translate(0 935.16)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect815\",\n    className: \"st0\",\n    d: \"M50.6 703 1638.1-884.5c59.8-59.8 156.7-59.8 216.5 0L3442.1 703c59.8 59.8 59.8 156.7 0 216.5L1854.6 2506.9c-59.8 59.8-156.7 59.8-216.5 0L50.6 919.5c-59.7-59.8-59.7-156.7 0-216.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect9557\",\n    d: \"M86.7 739.1 1674.2-848.4c39.9-39.9 104.5-39.9 144.3 0L3406 739.1c39.9 39.9 39.9 104.5 0 144.3L1818.5 2470.9c-39.9 39.9-104.5 39.9-144.3 0L86.7 883.4c-39.8-39.9-39.8-104.5 0-144.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect9559\",\n    className: \"st0\",\n    d: \"M134.8 787.2 1722.3-800.3c13.3-13.3 34.8-13.3 48.1 0L3357.9 787.2c13.3 13.3 13.3 34.8 0 48.1L1770.4 2422.8c-13.3 13.3-34.8 13.3-48.1 0L134.8 835.3c-13.3-13.3-13.3-34.9 0-48.1z\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M910.4 1666.4h320v689.1h-320zm453.1-187h320v876.1h-320zm445.8 376.1h320v500h-320zm453-451.9h320v951.9h-320z\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 1070.4,\n    cy: 1295,\n    r: 80\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"m1067.3 1300.5 447.8-252.2\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 1520.5,\n    cy: 1065.5,\n    r: 80\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"m1523.5 1054.5 423.6 325.2\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 1947.1,\n    cy: 1356.7,\n    r: 80\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"m1947.1 1378.7 475.2-323.2\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 2422.3,\n    cy: 1060.5,\n    r: 80\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.f1b06215e30a508523e86ea7b7957da4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter, Link, Route, Routes} from \"react-router-dom\";\nimport useDarkMode from 'use-dark-mode';\nimport {store} from '../app/store';\nimport {\n    Box,\n    Button,\n    Card,\n    CircularProgress,\n    CssBaseline,\n    IconButton,\n    ThemeProvider,\n    useMediaQuery\n} from '@mui/material';\nimport {createTheme} from '@mui/material/styles';\nimport BubblePlot from \"./BubblePlot\";\nimport {ParentSize} from \"@visx/responsive\";\nimport './Dashboard.scss';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport {AxisLabelSource} from \"./config\";\nimport {setUseWhatChange, useWhatChanged} from '@simbathesailor/use-what-changed';\nimport MapPlot from \"./MapPlot\";\nimport LinePlot from \"./LinePlot\";\nimport BarPlot from \"./BarPlot\";\nimport {BasicShareDialog, ImageDialog, SharePlotDialog} from \"./sharing\";\nimport YearSlider from \"../features/year/YearSlider\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectPlotType} from \"../features/plotType/plotTypeSlice\";\nimport Controls from \"../features/controls/Controls\";\nimport DataManager from \"../features/data/DataManager\";\nimport Url from './Url';\nimport {\n    isLoaded,\n    selectControlFields,\n    selectFeatureRanges, selectLegendPosition, selectPlotData,\n    selectPlotPresets\n} from \"./selectors\";\nimport {allValuesNotNull} from \"./utils/misc\";\nimport Legend from \"./Legend\";\nimport Nav from \"./Nav\";\nimport LogoIcon from \"./icons/logo.svg\";\n\nsetUseWhatChange(process.env.NODE_ENV === 'development');\nrequire('typeface-roboto');\n\nconst LoadingPlot = ({width, height}) => (\n    <div className='loading-plot' style={{width, height}}>\n        <CircularProgress variant='indeterminate'\n                          size={Math.min(Math.round(width / 7), 80)} />\n    </div>\n);\n\nconst PlotArea = ({plotType,\n                      axisLabels, xAxisLabel=null, yAxisLabel=null,\n                      disableInteraction = false, showLabel,\n                      x, y, levelVar}) => {\n    const DumbPlotArea = ({width, height}) => {\n        const data = useAppSelector(selectPlotData);\n        const featureRanges = useAppSelector(selectFeatureRanges);\n        const props = {\n            data,\n            featureRanges,\n            showLabel,\n            disableInteraction,\n            width,\n            height\n        };\n        switch (plotType.name) {\n            case 'bubble': return <BubblePlot {...props} />;\n            case 'line': return <LinePlot {...props}  />;\n            case 'bar': return <BarPlot {...props}  />;\n            default: return <MapPlot {...props} yAxisVar={y} />;\n        }\n    }\n    const loading = !useAppSelector(isLoaded);\n    return (\n        <ParentSize debounceTime={10} className='bg'>\n            {({ width, height }) => {\n                return (width + height) > 0 && (\n                    <div className='plot' style={{width, height}}>\n                        {loading ?\n                        <LoadingPlot width={width} height={height} /> :\n                        <DumbPlotArea width={width} height={height} /> }\n                        {axisLabels && !plotType.hideAxisLabels && (\n                            <>\n                                <div className='x-axis'>\n                                    {xAxisLabel || levelVar}\n                                </div>\n                                <div className='y-axis' style={{width: height}}>\n                                    {yAxisLabel}\n                                </div>\n                            </>\n                        )}\n                        {plotType.name !== 'map' && <Legend />}\n                    </div>\n                )\n            }}\n        </ParentSize>\n    );\n};\n\ntype DumbDashboardProps = {\n    darkMode: any\n    plotType: any\n    controls: any\n}\n\nconst DumbDashboard = ({darkMode, plotType, controls}: DumbDashboardProps) => {\n    const [showLabel, setShowLabel] = React.useState(null);\n\n    const computeXAxisLabel = () : string => {\n        switch (plotType.xAxisLabelSource) {\n            case AxisLabelSource.VAR: return controls.x.name;\n            case AxisLabelSource.COMPARE: return controls.compare.map(c => c.name).join('/');\n            case AxisLabelSource.YEAR: return 'Year'\n            default: return null;\n        }\n    };\n\n    const xAxisLabel = computeXAxisLabel();\n    const yAxisLabel = controls.y?.name;\n\n    const DashboardNav = () => {\n        const [genImgOpen, setGenImgOpen] = React.useState(false);\n        return (\n            <>\n                <Nav darkMode={darkMode} ShareDialog={\n                    ({isOpen, setOpen}) => <SharePlotDialog\n                        compares={controls.compare}\n                        xAxisLabel={xAxisLabel}\n                        yAxisLabel={yAxisLabel}\n                        isOpen={isOpen}\n                        setOpen={setOpen} />\n                }>\n                    <IconButton className='menu-btn'\n                                onClick={() => setGenImgOpen(true)}\n                                color=\"inherit\">\n                        <PhotoCameraIcon />\n                    </IconButton>\n                </Nav>\n                {genImgOpen && <ImageDialog\n                  isOpen={genImgOpen}\n                  setOpen={setGenImgOpen}\n                  label={showLabel}\n                  setLabel={setShowLabel}\n                  compares={controls.compare}\n                  xAxisLabel={xAxisLabel}\n                  yAxisLabel={yAxisLabel}\n                  showAxisLabels={!plotType.hideAxisLabels}\n                  pageInDarkMode={darkMode.value}\n                  plot={<Plot axisLabels={false}\n                              disableInteraction={true}\n                              showLabel={showLabel} />} />}\n            </>\n        );\n    }\n\n    const Plot = ({axisLabels, showLabel = null, disableInteraction = false}) => {\n        return (\n            <PlotArea plotType={plotType}\n                      axisLabels={axisLabels}\n                      disableInteraction={disableInteraction}\n                      showLabel={showLabel}\n                      x={controls.x}\n                      y={controls.y}\n                      xAxisLabel={xAxisLabel}\n                      yAxisLabel={yAxisLabel}\n                      levelVar={controls.level.name}\n            />\n        );\n    };\n\n    // useWhatChanged([plotType, controls]);\n\n    return (\n        <>\n            <DashboardNav />\n            <div id=\"dashboard\">\n                <main>\n                    <div className='plot-area'>\n                        <Card className='section'>\n                            <div id='inner-plot-container'>\n                                <Plot axisLabels={true} />\n                            </div>\n                        </Card>\n                    </div>\n                    <YearSlider />\n                </main>\n                <aside>\n                    <Controls />\n                </aside>\n            </div>\n        </>\n    );\n};\n\nconst Dashboard = ({darkMode}) => {\n    const plotType = useAppSelector(selectPlotType);\n    const controls = useAppSelector(selectControlFields);\n    const controlsIsReady = allValuesNotNull(controls);\n    return (\n        <>\n            {\n                controlsIsReady && plotType &&\n                <DumbDashboard darkMode={darkMode}\n                               plotType={plotType}\n                               controls={controls} />\n            }\n            <Url />\n            <DataManager />\n        </>\n    );\n};\n\nconst ExternalLink = ({to, style={}, children}) => (\n    <a href={to}\n          target='_blank'\n          rel='noreferrer'\n          className='external'\n          style={style}\n    >\n        {children}\n    </a>\n);\n\nconst SiteScreenshot = ({file}: {file: string}) => (\n    <a href={'/explore/img/' + file} className='screenshot' target='screenshot'>\n        <img src={'/explore/img/' + file} width='100%' alt='screenshot' />\n    </a>\n);\n\nconst DumbHome = ({darkMode, plotPresets}) => (\n    <>\n        <Nav darkMode={darkMode} ShareDialog={BasicShareDialog} />\n        <div id='home'>\n            <main>\n                <Card className='section'>\n                    <img className='logo' src={LogoIcon} alt='Statistipedia logo' />\n                    <h2>Welcome to Statistipedia <i>Explore!</i></h2>\n                    <p>\n                        This is an interactive dashboard.\n                    </p>\n                    <p style={{textAlign: 'center', margin: '1.5em 0'}}>\n                        <Link to='plot' className='btn'>\n                            <Button variant=\"contained\">Enter dashboard here</Button>\n                        </Link>\n                    </p>\n                    <p>Or you can try these presets:</p>\n                    <table id='presets-table'>\n                        <tbody>\n                        <tr>\n                            <th>Area</th>\n                            <th>Description</th>\n                        </tr>\n                        { plotPresets.map((p) => (\n                            <tr key={p.title}>\n                                <td>\n                                    <ExternalLink to={p.area.link}\n                                          style={{whiteSpace: 'nowrap'}}>\n                                        {p.area.name}\n                                    </ExternalLink>\n                                </td>\n                                <td>\n                                    <Link to={'/' + p.url}>{p.title}</Link>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </Card>\n            </main>\n            <aside>\n                <SiteScreenshot file='screenshot1.png' />\n                <SiteScreenshot file='screenshot3.png' />\n                <SiteScreenshot file='screenshot2.png' />\n                <SiteScreenshot file='screenshot4.png' />\n            </aside>\n        </div>\n    </>\n);\n\nconst Home = ({darkMode}) => {\n    const plotPresets = useAppSelector(selectPlotPresets);\n    return <DumbHome darkMode={darkMode} plotPresets={plotPresets} />;\n};\n\nconst About = ({darkMode}) => (\n    <>\n        <Nav darkMode={darkMode} ShareDialog={BasicShareDialog} />\n        <div id='about'>\n            Sun God Ra\n        </div>\n    </>\n);\n\nconst DashboardApp = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const darkMode = useDarkMode(prefersDarkMode);\n    const theme = React.useMemo(\n        () =>\n            createTheme({\n                palette: {\n                    mode: darkMode.value ? 'dark' : 'light',\n                    primary: {\n                        main: darkMode.value ? '#175391' : '#2278CF'\n                    }\n                },\n                breakpoints: {\n                    values: {\n                        xs: 1,\n                        sm: 360,\n                        md: 640,\n                        lg: 960,\n                        xl: 1080,\n                    },\n                }\n            }),\n        [darkMode],\n    );\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Box sx={{\n                    boxSizing: 'border-box',\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    paddingLeft: { xs: 0, xl: '270px' }\n                }}>\n                    <HashRouter>\n                        <Routes>\n                            <Route path=\"\" element={<Home darkMode={darkMode} />}/>\n                            <Route path=\"about\" element={<About darkMode={darkMode} />}/>\n                            <Route path=\"plot\" element={<Dashboard darkMode={darkMode} />}/>\n                        </Routes>\n                    </HashRouter>\n                </Box>\n            </ThemeProvider>\n        </Provider>\n    );\n};\n\nexport default DashboardApp;\n"],"names":["AxisLabelSource","LegendCorner","PLOT_TYPES","name","xAxisLabelSource","VAR","fields","x","y","z","YEAR","COMPARE","hideAxisLabels","PLOT_TYPES_MAP","zipObj","map","p","SHARE_SIZES","width","height","SHARE_SIZE_MAP","formatNum","minDigits","maxDigits","num","options","maximumFractionDigits","minimumFractionDigits","Number","toLocaleString","undefined","justAddCommas","curry","removeDecimals","oneDecimalPlace","dollarsAndCents","FIELD_TYPE_FORMAT_VALUES_MAP","_","Error","value","NUMERIC_FIELDS","indexBy","prop","FIELD_CFGS","type","group","COMPARE_BY_FIELD_CFGS","PLOT_PRESETS","title","params","area","level","compare","plot","ANIMATION_DURATION","augmentField","cfg","f","id","processData","data","newData","areas","byId","a","link","allIds","Object","keys","levels","compareByFields","initialState","masterData","values","topologies","byAreaAndLevel","status","dataSlice","createSlice","reducers","setData","state","action","payload","clearDataValues","actions","selectAreas","selectFields","selectCompareByFields","selectLevels","selectYears","years","selectValues","selectAllCompareByFieldDetails","createSelector","selectNumericFields","filter","includes","yearSlice","setYear","extraReducers","last","selectYear","year","plotTypeSlice","setPlotType","selectPlotType","plotType","defaultFields","loaded","controlsSlice","setControls","newValue","equals","setLoaded","selectControlsLoaded","controls","store","configureStore","reducer","dataReducer","yearReducer","plotTypeReducer","controlsReducer","elementRef","onClick","useEffect","clickListener","event","current","contains","target","document","addEventListener","removeEventListener","withBoundingRects","initialLeft","left","initialTop","top","offsetLeft","offsetTop","rect","parentRect","children","getRects","style","otherProps","transform","useAppDispatch","useDispatch","useAppSelector","useSelector","bind","xs","flatMap","as","concat","reduceRight","allValuesNotNull","obj","every","firstAndLast","length","nestedFirstAndLast","capitalize","s","toUpperCase","slice","average","array","reduce","b","sum","DEFAULT_COLOR","h","v","HUE_PRESETS","SAT_RANGE","autoScaleColorNominal","c","nFieldValues","index","isPrioritized","n","i","autoHueScale","sStart","sStep","vStep","COMPARE_BY_COLOR_FNS","shortName","autoSatScale","COMPARE_BY_COLOR_PRIORITIES","componentToHex","hex","toString","hsvToHex","r","g","h1","Math","floor","q","t","round","hsvToRgb","rgbToHex","createKey","cbfs","k1","sk","k2","fieldToIndexMap","cbf","field","sortKeys","_getColorFromPalette","ks","getColorFromPalette","hashMap","k","createKeySet","getShortLabels","getFullLabels","fullName","iterateOverCompareGrid","fn","cbf1","cbf2","v1","v2","_path","_path2","setupColorPalette","kahcs","forEach","kahc","color","addColorToPalette","keySets","getColor","getColorGrid","labels","rows","cols","fullNames","colors","byRowAndCol","compose","scbfs","switchToAlwaysMakeLegendHorizontal","processItemValues","vs","controlFields","divisions","colorPalette","createName","cs","div","geoid","divName","abbrev","areaName","mediumName","join","_findClearestCorner","right","y_mean","forceCorner","topLeft","max","topRight","bottomLeft","min","bottomRight","minimum","NW","corner","closestDataPoint","NE","SW","SE","chooseLegendPosition","featureRanges","_splitHalfs","pred","c1","c2","c14","c34","d","sortedData","sort","scaledY","selectControlFieldValues","cv","nfs","selectControlFields","mapObjIndexed","selectColorPalette","priorities","lowPriority","highPriority","accum","cbfi","isAccumDefault","newColors","existing","fieldValues","cbfv","vi","createColorPalette","selectCurrentDivisions","byLevel","dvsByLevel","selectTopologies","tbaal","cvs","selectArea","selectCurrentCompareDetails","cb","summaryDataForAllYears","ds","cf","cp","avs","individualDataForAllYears","selectPlotData","individualData","summaryData","individualDataIgnoringCompares","selectFeatureRanges","individualDataIgnoringComparesForAllYears","fvs","selectLegendPosition","selectPlotPresets","url","queryString","arrayFormat","isLoaded","DEFAULT_OPTIONS","selectedOpacity","unselectedOpacity","defaultOpacity","animate","groupByKeys","keyFields","items","im","groupBy","item","tail","lookupItem","itemMap","results","lookupKeys","matchesAllKeys","keysToMatch","itemKeys","all","range","TooltipContent","FormattedValue","formatValue","className","showLabel","disableInteraction","nKeyFields","React","selectedKeys","selectKeys","useTooltip","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","showTooltip","hideTooltip","select","scaledX","deselect","getKeys","key1","Tooltip","ref","useTouchOutside","defaultTooltipStyles","fontSize","padding","margin","makeSelectable","keyValues","useSpring","animOpacity","setAnim","isSelected","opacity","animated","fillOpacity","to","strokeOpacity","props","key","makeInteractive","callback","resolvedKeyValues","Function","onTouchStart","onMouseMove","onMouseLeave","makeSelectableAndInteractive","concreteKeys","xScale","scaleLinear","domain","yScale","sizeScale","scalePower","exponent","size","useSelect","animFn","animX","animY","animSize","config","duration","useSprings","springs","start","cx","cy","fill","stroke","projection","geoAlbersUsa","usMapOffset","opacityOptions","DumbMapPlot","scale","topoFeature","topojson","objects","featColl","features","colorScale","hcl","interpolate","interpolateHcl","path","geoPath","translate","bounds","tempItems","geoCentroid","animColor","AlbersUsa","feature","strokeWidth","lineOptions","pointOptions","hPadding","vPadding","lines","lineKeys","circleSize","voronoiInstance","voronoi","findNearest","line","point","localPoint","find","LinePath","GlyphCircle","heightAdjustment","startAtZero","pctOfLowest","getHeightAdjustment","scaleBand","animHeight","bandwidth","setSearchPart","parts","window","location","hash","split","replace","BaseDialog","isOpen","setOpen","fullScreen","alreadyOpen","setAlreadyOpen","search","useLocation","Dialog","open","onClose","history","back","keepMounted","createPlotTitle","compares","xAxisLabel","yAxisLabel","toLowerCase","DumbImageDialog","pageInDarkMode","label","setLabel","showAxisLabels","plotTitle","defaultShareSize","sharePresetSize","setSharePresetSize","previewSize","setPreviewSize","shareSize","setShareSize","format","setFormat","imgData","setImgData","theme","useTheme","useMediaQuery","breakpoints","down","darkModeState","setDarkModeState","darkModeRef","ImagePreview","darkMode","useDarkMode","classNameDark","classNameLight","storageKey","enable","disable","GenerateDialog","setNewSize","newSize","ratio","w","calculatePreviewSize","DialogContent","FormControl","InputLabel","variant","htmlFor","NativeSelect","onChange","getElementsByClassName","scrollTo","FormGroup","row","TextField","helperText","DialogActions","Button","el","getElementById","htmlToImage","getGenerateFn","canvasWidth","canvasHeight","pixelRatio","clientWidth","clientHeight","then","dataUrl","DownloadDialog","href","download","alt","src","PinterestShareButton","media","PinterestIcon","ImageDialog","BasicShareDialog","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","LinkedinShareButton","LinkedinIcon","display","CopyToClipboard","onCopy","text","IconButton","FileCopyOutlined","SharePlotDialog","PrettoSlider","styled","Slider","border","backgroundColor","boxShadow","lineHeight","background","borderRadius","transformOrigin","PlayButton","timer","advanceYear","yearsRemaining","setTimeout","setState","running","startSlideshow","clearTimeout","this","disabled","dispatch","Box","sx","flex","step","valueLabelDisplay","paddingTop","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCompare","_ref","svgRef","titleId","xmlns","viewBox","fillRule","strokeLinecap","strokeLinejoin","strokeMiterlimit","ForwardRef","makeIcon","iconSrc","SvgIcon","component","FIELD_TYPE_ICONS_MAP","PlaceIcon","CompareIconSrc","TimelapseIcon","PaidIcon","AccessTimeFilledIcon","CalendarMonthIcon","DoDisturbIcon","TagIcon","PLOT_TYPE_ICONS_MAP","BubbleChartIcon","TimelineIcon","BarChartIcon","RoomIcon","ToggleButtonGroup","exclusive","pt","Icon","ToggleButton","groupFields","gs","DrawerFieldSelect","body","position","Drawer","anchor","PaperProps","ModalProps","MenuFieldSelect","anchorEl","setAnchorEl","Menu","MenuListProps","role","FieldSelect","BaseFieldSelect","currentTarget","ArrowDropDown","Input","Divider","MenuItem","selected","ListItemIcon","ListItemText","primary","secondary","description","controlsIsReady","numericFields","numericFieldGroups","compareByGroups","used","disableUsedCompares","updateState","newState","updateCompare","newNewState","CompareByFieldSelect","BasicSelect","e","Cached","compareFields","controlsLoaded","isValueChunk","groupByFn","compareValues","mergeFeatures","featureSet","Set","allKeys","nonFeatureSet","difference","output","featureValue","onChunksFetched","valueData","processValues","otherData","arr","flatObject","property","flattenArrayOfObjects","getState","sortCompares","computeValueChunk","_computeChunks","Promise","axios","responses","fcs","require","storedYear","storedPlotType","updateUrl","allParams","newS","stringify","parse","nonNullControls","parseInt","configUpdated","bgAlphaHex","OrdinalStrip","fromColor","toColor","backgroundImage","OrdinalLabels","end","OrdinalLegend","NominalLegend","OrdinalByNominalLegend","colorRow","NominalByNominalLegend","cellPadding","cellSpacing","col","colorCell","disableFocusListener","OrdinalByOrdinalLegend","ls","WebkitMask","mask","bottom","LegendComponent","types","getLegendComponent","SideMenuItem","icon","ListItemButton","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","ShareDialog","plotPresets","shareOpen","setShareOpen","drawerOpen","setDrawerOpen","drawer","List","Home","Hidden","xlUp","xlDown","AppBar","elevation","Toolbar","edge","marginRight","xl","Typography","textDecoration","Share","toggle","LightMode","DarkMode","setUseWhatChange","process","LoadingPlot","CircularProgress","PlotArea","axisLabels","levelVar","DumbPlotArea","yAxisVar","loading","ParentSize","debounceTime","DumbDashboard","setShowLabel","computeXAxisLabel","DashboardNav","genImgOpen","setGenImgOpen","PhotoCamera","Plot","Card","Dashboard","ExternalLink","rel","SiteScreenshot","file","DumbHome","LogoIcon","textAlign","whiteSpace","About","prefersDarkMode","createTheme","palette","mode","main","sm","md","lg","ThemeProvider","CssBaseline","boxSizing","flexDirection","paddingLeft","element"],"sourceRoot":""}